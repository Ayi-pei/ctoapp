--
-- This migration creates a foundational table `user_rewards` to track
-- all task-based rewards claimed by users. This prevents duplicate rewards.
--

-- Step 1: Create the reward_type enum for better data integrity.
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'reward_type') THEN
        CREATE TYPE public.reward_type AS ENUM (
            'initial_investment_experience', -- For the '理财体验' task
            'market_prediction_success',     -- For the '市场预测' task
            'snowball_tier_1',               -- For '滚雪球' 500 USDT tier
            'snowball_tier_2',               -- For '滚雪球' 1500 USDT tier
            'snowball_tier_3'                -- For '滚雪球' 5000 USDT tier
        );
    END IF;
END$$;

-- Step 2: Create the user_rewards table.
CREATE TABLE IF NOT EXISTS public.user_rewards (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES public.users(id),
    reward_type public.reward_type NOT NULL,
    amount_awarded NUMERIC(15, 2) NOT NULL,
    details JSONB,
    claimed_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    -- Ensure a user can only claim each reward type once
    UNIQUE (user_id, reward_type)
);
COMMENT ON TABLE public.user_rewards IS 'Tracks rewards claimed by users for completing tasks.';
COMMENT ON COLUMN public.user_rewards.reward_type IS 'The specific type of task reward being claimed.';
COMMENT ON COLUMN public.user_rewards.amount_awarded IS 'The monetary value of the reward given.';
COMMENT ON COLUMN public.user_rewards.details IS 'Additional details, e.g., the investment or transaction ID that triggered the reward.';

-- Step 3: Enable RLS and set policies.
ALTER TABLE public.user_rewards ENABLE ROW LEVEL SECURITY;

-- Users can only see their own rewards.
CREATE POLICY "Allow users to see their own rewards" ON public.user_rewards
    FOR SELECT TO authenticated USING (auth.uid() = user_id);

-- Admins can see all rewards.
CREATE POLICY "Allow admins full access" ON public.user_rewards
    FOR ALL USING (public.is_admin(auth.uid()));
