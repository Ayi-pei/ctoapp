"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"3f16c3e68c89\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJEOlxceGlhbmdtdVxcRWRnZS1GdW5jdGlvblxcY3RvYXBwXFxzcmNcXGFwcFxcZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIzZjE2YzNlNjhjODlcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/context/enhanced-system-settings-context.tsx":
/*!**********************************************************!*\
  !*** ./src/context/enhanced-system-settings-context.tsx ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnhancedSystemSettingsProvider: () => (/* binding */ EnhancedSystemSettingsProvider),\n/* harmony export */   useEnhancedSystemSettings: () => (/* binding */ useEnhancedSystemSettings)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/types */ \"(app-pages-browser)/./src/types/index.ts\");\n/* harmony import */ var _simple_enhanced_logs_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./simple-enhanced-logs-context */ \"(app-pages-browser)/./src/context/simple-enhanced-logs-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ EnhancedSystemSettingsProvider,useEnhancedSystemSettings auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst SETTINGS_STORAGE_KEY = \"tradeflow_system_settings_v5\";\n// 默认设置\nconst getDefaultPairSettings = ()=>({\n        isTradingHalted: false,\n        baseProfitRate: 0.85,\n        maxDailyVolume: 1000000,\n        priceFluctuationLimit: 0.1,\n        emergencyStop: false\n    });\nconst defaultRiskControlSettings = {\n    maxInterventionsPerDay: 10,\n    maxPriceDeviationGlobal: 0.2,\n    autoStopLossThreshold: 0.15,\n    alertThresholds: {\n        largeVolumeAlert: 100000,\n        rapidPriceChangeAlert: 0.05,\n        systemLoadAlert: 0.8\n    }\n};\nconst defaultSystemMonitoringSettings = {\n    enableRealTimeMonitoring: true,\n    logRetentionDays: 30,\n    performanceMetricsEnabled: true,\n    alertNotificationsEnabled: true,\n    autoBackupEnabled: true,\n    backupIntervalHours: 24\n};\nconst defaultMarketSettings = _types__WEBPACK_IMPORTED_MODULE_2__.availablePairs.reduce((acc, pair)=>{\n    acc[pair] = getDefaultPairSettings();\n    return acc;\n}, {});\nconst defaultEnhancedSystemSettings = {\n    depositAddresses: {\n        USDT: \"\",\n        ETH: \"\",\n        BTC: \"\",\n        USD: \"\"\n    },\n    contractTradingEnabled: true,\n    marketSettings: defaultMarketSettings,\n    marketInterventions: [],\n    riskControl: defaultRiskControlSettings,\n    systemMonitoring: defaultSystemMonitoringSettings,\n    systemVersion: \"2.0.0\"\n};\n// 增强的时间逻辑函数\nconst isTimeInRange = (currentTime, startTime, endTime)=>{\n    const currentMinutes = currentTime.getHours() * 60 + currentTime.getMinutes();\n    const [startHour, startMin] = startTime.split(\":\").map(Number);\n    const [endHour, endMin] = endTime.split(\":\").map(Number);\n    const startMinutes = startHour * 60 + startMin;\n    const endMinutes = endHour * 60 + endMin;\n    // 处理跨日情况 (例如: 23:00 - 01:00)\n    if (startMinutes > endMinutes) {\n        return currentMinutes >= startMinutes || currentMinutes <= endMinutes;\n    }\n    // 正常情况 (例如: 09:00 - 17:00)\n    return currentMinutes >= startMinutes && currentMinutes <= endMinutes;\n};\nconst isDateInRange = (currentDate, startDate, endDate)=>{\n    if (!startDate && !endDate) return true;\n    const current = currentDate.toISOString().split(\"T\")[0];\n    if (startDate && current < startDate) return false;\n    if (endDate && current > endDate) return false;\n    return true;\n};\nconst isRecurringActive = (currentDate, recurring)=>{\n    if (!recurring) return true;\n    const currentDay = currentDate.getDay(); // 0=Sunday, 1=Monday, etc.\n    switch(recurring.type){\n        case \"daily\":\n            return true; // 每日重复总是活跃\n        case \"weekly\":\n            return !recurring.days || recurring.days.includes(currentDay);\n        case \"monthly\":\n            // 简化的月度重复逻辑\n            const currentDayOfMonth = currentDate.getDate();\n            return !recurring.days || recurring.days.includes(currentDayOfMonth);\n        default:\n            return true;\n    }\n};\nconst EnhancedSystemSettingsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction EnhancedSystemSettingsProvider(param) {\n    let { children } = param;\n    _s();\n    const { addLog } = (0,_simple_enhanced_logs_context__WEBPACK_IMPORTED_MODULE_3__.useSimpleEnhancedLogs)();\n    const [systemSettings, setSystemSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultEnhancedSystemSettings);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // const { addAuditLog, addLog } = useEnhancedLogs(); // 临时注释避免循环依赖\n    // 加载设置\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedSystemSettingsProvider.useEffect\": ()=>{\n            try {\n                const storedSettings = localStorage.getItem(SETTINGS_STORAGE_KEY);\n                if (storedSettings) {\n                    const parsedSettings = JSON.parse(storedSettings);\n                    setSystemSettings({\n                        \"EnhancedSystemSettingsProvider.useEffect\": (prev)=>({\n                                ...defaultEnhancedSystemSettings,\n                                ...parsedSettings,\n                                marketSettings: {\n                                    ...defaultEnhancedSystemSettings.marketSettings,\n                                    ...parsedSettings.marketSettings || {}\n                                },\n                                depositAddresses: {\n                                    ...defaultEnhancedSystemSettings.depositAddresses,\n                                    ...parsedSettings.depositAddresses || {}\n                                },\n                                riskControl: {\n                                    ...defaultEnhancedSystemSettings.riskControl,\n                                    ...parsedSettings.riskControl || {}\n                                },\n                                systemMonitoring: {\n                                    ...defaultEnhancedSystemSettings.systemMonitoring,\n                                    ...parsedSettings.systemMonitoring || {}\n                                },\n                                marketInterventions: parsedSettings.marketInterventions || []\n                            })\n                    }[\"EnhancedSystemSettingsProvider.useEffect\"]);\n                }\n            } catch (error) {\n                console.error(\"Failed to load enhanced system settings from localStorage\", error);\n            }\n            setIsLoaded(true);\n        }\n    }[\"EnhancedSystemSettingsProvider.useEffect\"], []);\n    // 保存设置\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedSystemSettingsProvider.useEffect\": ()=>{\n            if (isLoaded) {\n                try {\n                    localStorage.setItem(SETTINGS_STORAGE_KEY, JSON.stringify(systemSettings));\n                } catch (error) {\n                    console.error(\"Failed to save enhanced system settings to localStorage\", error);\n                }\n            }\n        }\n    }[\"EnhancedSystemSettingsProvider.useEffect\"], [\n        systemSettings,\n        isLoaded\n    ]);\n    // 基础设置更新函数\n    const updateDepositAddress = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\": (asset, value)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\": (prevSettings)=>({\n                        ...prevSettings,\n                        depositAddresses: {\n                            ...prevSettings.depositAddresses,\n                            [asset]: value\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated \".concat(asset, \" deposit address\"));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\"], [\n        addLog\n    ]);\n    const updateSetting = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateSetting]\": (key, value)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateSetting]\": (prevSettings)=>({\n                        ...prevSettings,\n                        [key]: value\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateSetting]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated system setting: \".concat(String(key)));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateSetting]\"], [\n        addLog\n    ]);\n    const updatePairSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\": (pair, newSettings)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\": (prev)=>({\n                        ...prev,\n                        marketSettings: {\n                            ...prev.marketSettings,\n                            [pair]: {\n                                ...prev.marketSettings[pair] || getDefaultPairSettings(),\n                                ...newSettings\n                            }\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated trading pair settings for \".concat(pair));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\"], [\n        addLog\n    ]);\n    const updateRiskControlSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\": (newSettings)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\": (prev)=>({\n                        ...prev,\n                        riskControl: {\n                            ...prev.riskControl,\n                            ...newSettings\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated risk control settings\");\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\"], [\n        addLog\n    ]);\n    const updateSystemMonitoringSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\": (newSettings)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\": (prev)=>({\n                        ...prev,\n                        systemMonitoring: {\n                            ...prev.systemMonitoring,\n                            ...newSettings\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated system monitoring settings\");\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\"], [\n        addLog\n    ]);\n    // 增强的干预管理\n    const addMarketIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\": (intervention)=>{\n            if (systemSettings.marketInterventions.length >= 10) {\n                throw new Error(\"Maximum number of interventions (10) reached\");\n            }\n            const newId = \"intervention-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n            const now = new Date().toISOString();\n            const newIntervention = {\n                id: newId,\n                tradingPair: \"BTC/USDT\",\n                startTime: \"10:00\",\n                endTime: \"11:00\",\n                minPrice: 110000,\n                maxPrice: 120000,\n                trend: \"random\",\n                priority: 5,\n                conflictResolution: \"override\",\n                isActive: false,\n                createdBy: \"admin\",\n                createdAt: now,\n                smoothTransition: true,\n                transitionDuration: 30000,\n                ...intervention\n            };\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\": (prev)=>({\n                        ...prev,\n                        marketInterventions: [\n                            ...prev.marketInterventions,\n                            newIntervention\n                        ]\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Created market intervention for \".concat(newIntervention.tradingPair));\n            return newId;\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\"], [\n        systemSettings.marketInterventions.length\n    ]);\n    const removeMarketIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\": (id)=>{\n            const intervention = systemSettings.marketInterventions.find({\n                \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention].intervention\": (i)=>i.id === id\n            }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention].intervention\"]);\n            if (!intervention) return;\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\": (prev)=>({\n                        ...prev,\n                        marketInterventions: prev.marketInterventions.filter({\n                            \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\": (i)=>i.id !== id\n                        }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\"])\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Deleted market intervention for \".concat(intervention.tradingPair));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\"], [\n        systemSettings.marketInterventions,\n        addLog\n    ]);\n    const updateMarketIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\": (id, updates)=>{\n            const intervention = systemSettings.marketInterventions.find({\n                \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention].intervention\": (i)=>i.id === id\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention].intervention\"]);\n            if (!intervention) return;\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\": (prev)=>({\n                        ...prev,\n                        marketInterventions: prev.marketInterventions.map({\n                            \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\": (i)=>i.id === id ? {\n                                    ...i,\n                                    ...updates,\n                                    lastModifiedBy: \"admin\",\n                                    lastModifiedAt: new Date().toISOString()\n                                } : i\n                        }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\"])\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated market intervention for \".concat(intervention.tradingPair));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\"], [\n        systemSettings.marketInterventions,\n        addLog\n    ]);\n    const activateIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[activateIntervention]\": (id)=>{\n            updateMarketIntervention(id, {\n                isActive: true\n            });\n            addLog({\n                entity_type: \"market_intervention\",\n                entity_id: id,\n                action: \"activate\",\n                details: \"Activated market intervention\",\n                severity: \"critical\"\n            });\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[activateIntervention]\"], [\n        updateMarketIntervention,\n        addLog\n    ]);\n    const deactivateIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[deactivateIntervention]\": (id)=>{\n            updateMarketIntervention(id, {\n                isActive: false\n            });\n            addLog({\n                entity_type: \"market_intervention\",\n                entity_id: id,\n                action: \"deactivate\",\n                details: \"Deactivated market intervention\",\n                severity: \"high\"\n            });\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[deactivateIntervention]\"], [\n        updateMarketIntervention,\n        addLog\n    ]);\n    // 增强的时间逻辑验证\n    const isInterventionActiveNow = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[isInterventionActiveNow]\": (intervention)=>{\n            if (!intervention.isActive) return false;\n            const now = new Date();\n            // 检查日期范围\n            if (!isDateInRange(now, intervention.startDate, intervention.endDate)) return false;\n            // 检查时间范围\n            if (!isTimeInRange(now, intervention.startTime, intervention.endTime)) return false;\n            // 检查重复模式\n            if (!isRecurringActive(now, intervention.recurring)) return false;\n            return true;\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[isInterventionActiveNow]\"], []);\n    const getActiveInterventions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\": (tradingPair)=>{\n            let activeInterventions = systemSettings.marketInterventions.filter(isInterventionActiveNow);\n            if (tradingPair) {\n                activeInterventions = activeInterventions.filter({\n                    \"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\": (i)=>i.tradingPair === tradingPair\n                }[\"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\"]);\n            }\n            // 按优先级排序\n            return activeInterventions.sort({\n                \"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\": (a, b)=>b.priority - a.priority\n            }[\"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\"]);\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\"], [\n        systemSettings.marketInterventions,\n        isInterventionActiveNow\n    ]);\n    const resolveInterventionConflicts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts]\": (interventions)=>{\n            if (interventions.length === 0) return null;\n            if (interventions.length === 1) return interventions[0];\n            // 按优先级排序\n            const sorted = interventions.sort({\n                \"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts].sorted\": (a, b)=>b.priority - a.priority\n            }[\"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts].sorted\"]);\n            const highest = sorted[0];\n            if (highest.conflictResolution === \"override\") {\n                return highest;\n            } else if (highest.conflictResolution === \"blend\") {\n                // 实现混合逻辑 - 这里简化为返回最高优先级\n                return highest;\n            }\n            return highest;\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts]\"], []);\n    // 验证功能\n    const validateInterventionSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[validateInterventionSettings]\": (intervention)=>{\n            const errors = [];\n            if (intervention.minPrice && intervention.maxPrice && intervention.minPrice >= intervention.maxPrice) {\n                errors.push(\"Minimum price must be less than maximum price\");\n            }\n            if (intervention.priority && (intervention.priority < 1 || intervention.priority > 10)) {\n                errors.push(\"Priority must be between 1 and 10\");\n            }\n            if (intervention.startTime && intervention.endTime) {\n                const [startHour, startMin] = intervention.startTime.split(\":\").map(Number);\n                const [endHour, endMin] = intervention.endTime.split(\":\").map(Number);\n                if (isNaN(startHour) || isNaN(startMin) || isNaN(endHour) || isNaN(endMin)) {\n                    errors.push(\"Invalid time format\");\n                }\n            }\n            if (intervention.maxPriceDeviation && intervention.maxPriceDeviation > systemSettings.riskControl.maxPriceDeviationGlobal) {\n                errors.push(\"Price deviation exceeds global limit of \".concat(systemSettings.riskControl.maxPriceDeviationGlobal * 100, \"%\"));\n            }\n            return {\n                valid: errors.length === 0,\n                errors\n            };\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[validateInterventionSettings]\"], [\n        systemSettings.riskControl.maxPriceDeviationGlobal\n    ]);\n    // 导入导出功能\n    const exportSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[exportSettings]\": ()=>{\n            return JSON.stringify(systemSettings, null, 2);\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[exportSettings]\"], [\n        systemSettings\n    ]);\n    const importSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[importSettings]\": (settingsJson)=>{\n            try {\n                const importedSettings = JSON.parse(settingsJson);\n                // 基本验证\n                if (!importedSettings.systemVersion) {\n                    return {\n                        success: false,\n                        error: \"Invalid settings format\"\n                    };\n                }\n                setSystemSettings({\n                    ...defaultEnhancedSystemSettings,\n                    ...importedSettings\n                });\n                addLog({\n                    entity_type: \"system_setting\",\n                    entity_id: \"import\",\n                    action: \"update\",\n                    details: \"Imported system settings\",\n                    severity: \"critical\"\n                });\n                return {\n                    success: true\n                };\n            } catch (error) {\n                return {\n                    success: false,\n                    error: \"Failed to parse settings JSON\"\n                };\n            }\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[importSettings]\"], [\n        addLog\n    ]);\n    // 备份功能\n    const createBackup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[createBackup]\": ()=>{\n            const backupData = {\n                ...systemSettings,\n                backupTimestamp: new Date().toISOString()\n            };\n            localStorage.setItem(\"\".concat(SETTINGS_STORAGE_KEY, \"_backup\"), JSON.stringify(backupData));\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[createBackup]\": (prev)=>({\n                        ...prev,\n                        lastBackupTime: new Date().toISOString()\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[createBackup]\"]);\n            addLog({\n                entity_type: \"system_setting\",\n                entity_id: \"backup\",\n                action: \"create\",\n                details: \"Created system settings backup\",\n                severity: \"medium\"\n            });\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[createBackup]\"], [\n        systemSettings,\n        addLog\n    ]);\n    const restoreFromBackup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[restoreFromBackup]\": (backupData)=>{\n            try {\n                const backup = JSON.parse(backupData);\n                if (!backup.systemVersion) {\n                    return {\n                        success: false,\n                        error: \"Invalid backup format\"\n                    };\n                }\n                setSystemSettings(backup);\n                addLog({\n                    entity_type: \"system_setting\",\n                    entity_id: \"restore\",\n                    action: \"update\",\n                    details: \"Restored system settings from backup\",\n                    severity: \"critical\"\n                });\n                return {\n                    success: true\n                };\n            } catch (error) {\n                return {\n                    success: false,\n                    error: \"Failed to restore from backup\"\n                };\n            }\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[restoreFromBackup]\"], [\n        addLog\n    ]);\n    const value = {\n        systemSettings,\n        updateDepositAddress,\n        updateSetting,\n        updatePairSettings,\n        updateRiskControlSettings,\n        updateSystemMonitoringSettings,\n        addMarketIntervention,\n        removeMarketIntervention,\n        updateMarketIntervention,\n        activateIntervention,\n        deactivateIntervention,\n        isInterventionActiveNow,\n        getActiveInterventions,\n        resolveInterventionConflicts,\n        validateInterventionSettings,\n        exportSettings,\n        importSettings,\n        createBackup,\n        restoreFromBackup\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EnhancedSystemSettingsContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\xiangmu\\\\Edge-Function\\\\ctoapp\\\\src\\\\context\\\\enhanced-system-settings-context.tsx\",\n        lineNumber: 793,\n        columnNumber: 5\n    }, this);\n}\n_s(EnhancedSystemSettingsProvider, \"vmN4U4L9M8pjdQ3pRyf6HxW77uU=\", false, function() {\n    return [\n        _simple_enhanced_logs_context__WEBPACK_IMPORTED_MODULE_3__.useSimpleEnhancedLogs\n    ];\n});\n_c = EnhancedSystemSettingsProvider;\nfunction useEnhancedSystemSettings() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(EnhancedSystemSettingsContext);\n    if (context === undefined) {\n        throw new Error(\"useEnhancedSystemSettings must be used within an EnhancedSystemSettingsProvider\");\n    }\n    return context;\n}\n_s1(useEnhancedSystemSettings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EnhancedSystemSettingsProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/enhanced-system-settings-context.tsx\n"));

/***/ })

});