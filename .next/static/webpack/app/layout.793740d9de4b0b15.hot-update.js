"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"cea04a130ef1\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJEOlxceGlhbmdtdVxcRWRnZS1GdW5jdGlvblxcY3RvYXBwXFxzcmNcXGFwcFxcZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJjZWEwNGExMzBlZjFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/context/enhanced-logs-context.tsx":
/*!***********************************************!*\
  !*** ./src/context/enhanced-logs-context.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnhancedLogsProvider: () => (/* binding */ EnhancedLogsProvider),\n/* harmony export */   useEnhancedLogs: () => (/* binding */ useEnhancedLogs)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-context */ \"(app-pages-browser)/./src/context/auth-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ EnhancedLogsProvider,useEnhancedLogs auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst LOGS_STORAGE_KEY = 'tradeflow_action_logs_v3';\nconst AUDIT_LOGS_STORAGE_KEY = 'tradeflow_audit_logs_v1';\nconst INTERVENTION_LOGS_STORAGE_KEY = 'tradeflow_intervention_logs_v1';\nconst EnhancedLogsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction EnhancedLogsProvider(param) {\n    let { children } = param;\n    _s();\n    const { user: adminUser } = (0,_auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const [logs, setLogs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [auditLogs, setAuditLogs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [interventionLogs, setInterventionLogs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [performanceMetrics, setPerformanceMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        interventionExecutionTime: new Map(),\n        priceDeviationHistory: new Map(),\n        userImpactCount: new Map(),\n        systemLoad: []\n    });\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // 获取客户端信息\n    const getClientInfo = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[getClientInfo]\": ()=>{\n            if (false) {}\n            return {\n                ipAddress: 'client-side',\n                userAgent: navigator.userAgent,\n                sessionId: sessionStorage.getItem('sessionId') || \"session_\".concat(Date.now())\n            };\n        }\n    }[\"EnhancedLogsProvider.useCallback[getClientInfo]\"], []);\n    // 加载所有日志数据\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedLogsProvider.useEffect\": ()=>{\n            try {\n                // 加载操作日志\n                const storedLogs = localStorage.getItem(LOGS_STORAGE_KEY);\n                if (storedLogs) {\n                    setLogs(JSON.parse(storedLogs));\n                }\n                // 加载审计日志\n                const storedAuditLogs = localStorage.getItem(AUDIT_LOGS_STORAGE_KEY);\n                if (storedAuditLogs) {\n                    setAuditLogs(JSON.parse(storedAuditLogs));\n                }\n                // 加载干预日志\n                const storedInterventionLogs = localStorage.getItem(INTERVENTION_LOGS_STORAGE_KEY);\n                if (storedInterventionLogs) {\n                    setInterventionLogs(JSON.parse(storedInterventionLogs));\n                }\n            } catch (error) {\n                console.error(\"Failed to load logs from localStorage\", error);\n            }\n            setIsLoaded(true);\n        }\n    }[\"EnhancedLogsProvider.useEffect\"], []);\n    // 保存日志数据\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedLogsProvider.useEffect\": ()=>{\n            if (isLoaded) {\n                try {\n                    localStorage.setItem(LOGS_STORAGE_KEY, JSON.stringify(logs));\n                    localStorage.setItem(AUDIT_LOGS_STORAGE_KEY, JSON.stringify(auditLogs));\n                    localStorage.setItem(INTERVENTION_LOGS_STORAGE_KEY, JSON.stringify(interventionLogs));\n                } catch (error) {\n                    console.error(\"Failed to save logs to localStorage\", error);\n                }\n            }\n        }\n    }[\"EnhancedLogsProvider.useEffect\"], [\n        logs,\n        auditLogs,\n        interventionLogs,\n        isLoaded\n    ]);\n    // 增强的操作日志记录\n    const addLog = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[addLog]\": (params)=>{\n            const actor = params.actor || adminUser;\n            if (!actor) {\n                console.warn(\"Log not added: No actor found.\");\n                return;\n            }\n            const clientInfo = getClientInfo();\n            const newLog = {\n                id: \"log_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9)),\n                entity_type: params.entity_type,\n                entity_id: params.entity_id,\n                action: params.action,\n                details: params.details,\n                operator_id: actor.id,\n                operator_username: actor.username,\n                created_at: new Date().toISOString()\n            };\n            setLogs({\n                \"EnhancedLogsProvider.useCallback[addLog]\": (prev)=>[\n                        newLog,\n                        ...prev\n                    ].slice(0, 5000)\n            }[\"EnhancedLogsProvider.useCallback[addLog]\"]); // 保留最近5000条记录\n            // 对于高风险操作，同时记录审计日志\n            if (params.severity === 'high' || params.severity === 'critical') {\n                addAuditLog({\n                    adminId: actor.id,\n                    adminUsername: actor.username,\n                    action: params.action,\n                    targetType: params.entity_type,\n                    targetId: params.entity_id,\n                    description: params.details,\n                    severity: params.severity,\n                    ...clientInfo\n                });\n            }\n        }\n    }[\"EnhancedLogsProvider.useCallback[addLog]\"], [\n        adminUser,\n        getClientInfo\n    ]);\n    // 审计日志记录\n    const addAuditLog = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[addAuditLog]\": (log)=>{\n            const newAuditLog = {\n                ...log,\n                id: \"audit_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9)),\n                timestamp: Date.now()\n            };\n            setAuditLogs({\n                \"EnhancedLogsProvider.useCallback[addAuditLog]\": (prev)=>[\n                        newAuditLog,\n                        ...prev\n                    ].slice(0, 2000)\n            }[\"EnhancedLogsProvider.useCallback[addAuditLog]\"]); // 保留最近2000条审计记录\n            // 关键操作实时告警\n            if (log.severity === 'critical') {\n                console.warn('CRITICAL AUDIT EVENT:', newAuditLog);\n            // 在实际应用中，这里应该发送告警通知\n            }\n        }\n    }[\"EnhancedLogsProvider.useCallback[addAuditLog]\"], []);\n    // 市场干预日志记录\n    const addInterventionLog = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[addInterventionLog]\": (log)=>{\n            const newInterventionLog = {\n                ...log,\n                id: \"intervention_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9)),\n                timestamp: Date.now()\n            };\n            setInterventionLogs({\n                \"EnhancedLogsProvider.useCallback[addInterventionLog]\": (prev)=>[\n                        newInterventionLog,\n                        ...prev\n                    ].slice(0, 1000)\n            }[\"EnhancedLogsProvider.useCallback[addInterventionLog]\"]); // 保留最近1000条干预记录\n            // 大幅价格偏差告警\n            if (log.priceDeviation && log.priceDeviation > 0.1) {\n                console.warn('Large price deviation detected:', newInterventionLog);\n            }\n        }\n    }[\"EnhancedLogsProvider.useCallback[addInterventionLog]\"], []);\n    // 性能监控\n    const trackPerformance = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[trackPerformance]\": (interventionId, executionTime, priceImpact)=>{\n            setPerformanceMetrics({\n                \"EnhancedLogsProvider.useCallback[trackPerformance]\": (prev)=>{\n                    const newMetrics = {\n                        ...prev\n                    };\n                    // 记录执行时间\n                    newMetrics.interventionExecutionTime.set(interventionId, executionTime);\n                    // 记录价格影响\n                    if (priceImpact !== undefined) {\n                        const history = newMetrics.priceDeviationHistory.get(interventionId) || [];\n                        history.push(priceImpact);\n                        newMetrics.priceDeviationHistory.set(interventionId, history.slice(-100)); // 保留最近100次记录\n                    }\n                    // 记录系统负载\n                    const currentLoad = {\n                        timestamp: Date.now(),\n                        activeUsers: 0,\n                        activeInterventions: interventionLogs.filter({\n                            \"EnhancedLogsProvider.useCallback[trackPerformance]\": (log)=>Date.now() - log.timestamp < 24 * 60 * 60 * 1000 // 24小时内的干预\n                        }[\"EnhancedLogsProvider.useCallback[trackPerformance]\"]).length\n                    };\n                    newMetrics.systemLoad = [\n                        ...newMetrics.systemLoad,\n                        currentLoad\n                    ].slice(-1000); // 保留最近1000个负载记录\n                    return newMetrics;\n                }\n            }[\"EnhancedLogsProvider.useCallback[trackPerformance]\"]);\n        }\n    }[\"EnhancedLogsProvider.useCallback[trackPerformance]\"], [\n        interventionLogs\n    ]);\n    // 查询功能\n    const getLogsByEntity = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[getLogsByEntity]\": (entityType, entityId)=>{\n            return logs.filter({\n                \"EnhancedLogsProvider.useCallback[getLogsByEntity]\": (log)=>log.entity_type === entityType && log.entity_id === entityId\n            }[\"EnhancedLogsProvider.useCallback[getLogsByEntity]\"]);\n        }\n    }[\"EnhancedLogsProvider.useCallback[getLogsByEntity]\"], [\n        logs\n    ]);\n    const getAuditLogsByAdmin = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[getAuditLogsByAdmin]\": (adminId)=>{\n            return auditLogs.filter({\n                \"EnhancedLogsProvider.useCallback[getAuditLogsByAdmin]\": (log)=>log.adminId === adminId\n            }[\"EnhancedLogsProvider.useCallback[getAuditLogsByAdmin]\"]);\n        }\n    }[\"EnhancedLogsProvider.useCallback[getAuditLogsByAdmin]\"], [\n        auditLogs\n    ]);\n    const getInterventionLogsByPair = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[getInterventionLogsByPair]\": (tradingPair)=>{\n            return interventionLogs.filter({\n                \"EnhancedLogsProvider.useCallback[getInterventionLogsByPair]\": (log)=>log.tradingPair === tradingPair\n            }[\"EnhancedLogsProvider.useCallback[getInterventionLogsByPair]\"]);\n        }\n    }[\"EnhancedLogsProvider.useCallback[getInterventionLogsByPair]\"], [\n        interventionLogs\n    ]);\n    // 导出功能\n    const exportLogs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedLogsProvider.useCallback[exportLogs]\": (type, startDate, endDate)=>{\n            let dataToExport = [];\n            switch(type){\n                case 'action':\n                    dataToExport = logs;\n                    break;\n                case 'audit':\n                    dataToExport = auditLogs;\n                    break;\n                case 'intervention':\n                    dataToExport = interventionLogs;\n                    break;\n            }\n            // 日期过滤\n            if (startDate || endDate) {\n                dataToExport = dataToExport.filter({\n                    \"EnhancedLogsProvider.useCallback[exportLogs]\": (item)=>{\n                        const itemDate = new Date(item.created_at || item.timestamp);\n                        if (startDate && itemDate < startDate) return false;\n                        if (endDate && itemDate > endDate) return false;\n                        return true;\n                    }\n                }[\"EnhancedLogsProvider.useCallback[exportLogs]\"]);\n            }\n            // 转换为CSV格式\n            if (dataToExport.length === 0) return '';\n            const headers = Object.keys(dataToExport[0]).join(',');\n            const rows = dataToExport.map({\n                \"EnhancedLogsProvider.useCallback[exportLogs].rows\": (item)=>Object.values(item).map({\n                        \"EnhancedLogsProvider.useCallback[exportLogs].rows\": (value)=>typeof value === 'object' ? JSON.stringify(value) : String(value)\n                    }[\"EnhancedLogsProvider.useCallback[exportLogs].rows\"]).join(',')\n            }[\"EnhancedLogsProvider.useCallback[exportLogs].rows\"]);\n            return [\n                headers,\n                ...rows\n            ].join('\\n');\n        }\n    }[\"EnhancedLogsProvider.useCallback[exportLogs]\"], [\n        logs,\n        auditLogs,\n        interventionLogs\n    ]);\n    const value = {\n        logs,\n        auditLogs,\n        interventionLogs,\n        performanceMetrics,\n        addLog,\n        addAuditLog,\n        addInterventionLog,\n        trackPerformance,\n        getLogsByEntity,\n        getAuditLogsByAdmin,\n        getInterventionLogsByPair,\n        exportLogs\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EnhancedLogsContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\xiangmu\\\\Edge-Function\\\\ctoapp\\\\src\\\\context\\\\enhanced-logs-context.tsx\",\n        lineNumber: 329,\n        columnNumber: 9\n    }, this);\n}\n_s(EnhancedLogsProvider, \"nZdq9QIvXs2TRTs3dy0txXa+LcQ=\", false, function() {\n    return [\n        _auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = EnhancedLogsProvider;\nfunction useEnhancedLogs() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(EnhancedLogsContext);\n    if (context === undefined) {\n        throw new Error('useEnhancedLogs must be used within an EnhancedLogsProvider');\n    }\n    return context;\n}\n_s1(useEnhancedLogs, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EnhancedLogsProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb250ZXh0L2VuaGFuY2VkLWxvZ3MtY29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFc0c7QUFFN0Q7QUFFekMsTUFBTU8sbUJBQW1CO0FBQ3pCLE1BQU1DLHlCQUF5QjtBQUMvQixNQUFNQyxnQ0FBZ0M7QUFxRnRDLE1BQU1DLG9DQUFzQlQsb0RBQWFBLENBQXNDVTtBQUV4RSxTQUFTQyxxQkFBcUIsS0FBcUM7UUFBckMsRUFBRUMsUUFBUSxFQUEyQixHQUFyQzs7SUFDakMsTUFBTSxFQUFFQyxNQUFNQyxTQUFTLEVBQUUsR0FBR1Qsc0RBQU9BO0lBQ25DLE1BQU0sQ0FBQ1UsTUFBTUMsUUFBUSxHQUFHZCwrQ0FBUUEsQ0FBYyxFQUFFO0lBQ2hELE1BQU0sQ0FBQ2UsV0FBV0MsYUFBYSxHQUFHaEIsK0NBQVFBLENBQWEsRUFBRTtJQUN6RCxNQUFNLENBQUNpQixrQkFBa0JDLG9CQUFvQixHQUFHbEIsK0NBQVFBLENBQTBCLEVBQUU7SUFDcEYsTUFBTSxDQUFDbUIsb0JBQW9CQyxzQkFBc0IsR0FBR3BCLCtDQUFRQSxDQUFxQjtRQUM3RXFCLDJCQUEyQixJQUFJQztRQUMvQkMsdUJBQXVCLElBQUlEO1FBQzNCRSxpQkFBaUIsSUFBSUY7UUFDckJHLFlBQVksRUFBRTtJQUNsQjtJQUNBLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHM0IsK0NBQVFBLENBQUM7SUFFekMsVUFBVTtJQUNWLE1BQU00QixnQkFBZ0IxQixrREFBV0E7MkRBQUM7WUFDOUIsSUFBSSxLQUE2QixFQUFFLEVBQVU7WUFDN0MsT0FBTztnQkFDSDJCLFdBQVc7Z0JBQ1hDLFdBQVdDLFVBQVVELFNBQVM7Z0JBQzlCRSxXQUFXQyxlQUFlQyxPQUFPLENBQUMsZ0JBQWdCLFdBQXNCLE9BQVhDLEtBQUtDLEdBQUc7WUFDekU7UUFDSjswREFBRyxFQUFFO0lBRUwsV0FBVztJQUNYbkMsZ0RBQVNBOzBDQUFDO1lBQ04sSUFBSTtnQkFD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Q0FHO1FBQ0FDO1FBQ0FFO0lBQ0o7SUFFQSxxQkFDSSw4REFBQy9GLG9CQUFvQitHLFFBQVE7UUFBQ0YsT0FBT0E7a0JBQ2hDMUc7Ozs7OztBQUdiO0dBN09nQkQ7O1FBQ2dCTixrREFBT0E7OztLQUR2Qk07QUErT1QsU0FBUzhHOztJQUNaLE1BQU1DLFVBQVV6SCxpREFBVUEsQ0FBQ1E7SUFDM0IsSUFBSWlILFlBQVloSCxXQUFXO1FBQ3ZCLE1BQU0sSUFBSWlILE1BQU07SUFDcEI7SUFDQSxPQUFPRDtBQUNYO0lBTmdCRCIsInNvdXJjZXMiOlsiRDpcXHhpYW5nbXVcXEVkZ2UtRnVuY3Rpb25cXGN0b2FwcFxcc3JjXFxjb250ZXh0XFxlbmhhbmNlZC1sb2dzLWNvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCwgUmVhY3ROb2RlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQWN0aW9uTG9nLCBBbnlSZXF1ZXN0LCBVc2VyIH0gZnJvbSAnQC90eXBlcyc7XG5pbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAnLi9hdXRoLWNvbnRleHQnO1xuXG5jb25zdCBMT0dTX1NUT1JBR0VfS0VZID0gJ3RyYWRlZmxvd19hY3Rpb25fbG9nc192Myc7XG5jb25zdCBBVURJVF9MT0dTX1NUT1JBR0VfS0VZID0gJ3RyYWRlZmxvd19hdWRpdF9sb2dzX3YxJztcbmNvbnN0IElOVEVSVkVOVElPTl9MT0dTX1NUT1JBR0VfS0VZID0gJ3RyYWRlZmxvd19pbnRlcnZlbnRpb25fbG9nc192MSc7XG5cbi8vIOaJqeWxleeahOaXpeW/l+exu+Wei1xudHlwZSBFbmhhbmNlZExvZ1BhcmFtcyA9IHtcbiAgICBlbnRpdHlfdHlwZTogJ3JlcXVlc3QnIHwgJ3Rhc2tfY29tcGxldGlvbicgfCAnYWN0aXZpdHlfcGFydGljaXBhdGlvbicgfCAnbWFya2V0X2ludGVydmVudGlvbicgfCAndXNlcl9tYW5hZ2VtZW50JyB8ICdzeXN0ZW1fc2V0dGluZycgfCAnYmFsYW5jZV9hZGp1c3RtZW50JztcbiAgICBlbnRpdHlfaWQ6IHN0cmluZztcbiAgICBhY3Rpb246ICdhcHByb3ZlJyB8ICdyZWplY3QnIHwgJ3VwZGF0ZScgfCAnZGVsZXRlJyB8ICdjcmVhdGUnIHwgJ3VzZXJfY29tcGxldGUnIHwgJ2FjdGl2YXRlJyB8ICdkZWFjdGl2YXRlJyB8ICdmcmVlemUnIHwgJ3VuZnJlZXplJyB8ICdhZGp1c3QnIHwgJ2ludGVydmVuZSc7XG4gICAgZGV0YWlsczogc3RyaW5nO1xuICAgIGFjdG9yPzogVXNlcjtcbiAgICBtZXRhZGF0YT86IFJlY29yZDxzdHJpbmcsIGFueT47IC8vIOmineWklueahOe7k+aehOWMluaVsOaNrlxuICAgIHNldmVyaXR5PzogJ2xvdycgfCAnbWVkaXVtJyB8ICdoaWdoJyB8ICdjcml0aWNhbCc7IC8vIOaTjeS9nOS4pemHjeaAp+e6p+WIq1xuICAgIGlwQWRkcmVzcz86IHN0cmluZztcbiAgICB1c2VyQWdlbnQ/OiBzdHJpbmc7XG59O1xuXG4vLyDlrqHorqHml6Xlv5fmjqXlj6NcbmludGVyZmFjZSBBdWRpdExvZyB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBhZG1pbklkOiBzdHJpbmc7XG4gICAgYWRtaW5Vc2VybmFtZTogc3RyaW5nO1xuICAgIGFjdGlvbjogc3RyaW5nO1xuICAgIHRhcmdldFR5cGU6IHN0cmluZztcbiAgICB0YXJnZXRJZDogc3RyaW5nO1xuICAgIGJlZm9yZT86IGFueTtcbiAgICBhZnRlcj86IGFueTtcbiAgICB0aW1lc3RhbXA6IG51bWJlcjtcbiAgICBpcEFkZHJlc3M/OiBzdHJpbmc7XG4gICAgdXNlckFnZW50Pzogc3RyaW5nO1xuICAgIHNlc3Npb25JZD86IHN0cmluZztcbiAgICBzZXZlcml0eTogJ2xvdycgfCAnbWVkaXVtJyB8ICdoaWdoJyB8ICdjcml0aWNhbCc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbn1cblxuLy8g5biC5Zy65bmy6aKE5LiT55So5pel5b+XXG5pbnRlcmZhY2UgTWFya2V0SW50ZXJ2ZW50aW9uTG9nIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGludGVydmVudGlvbklkOiBzdHJpbmc7XG4gICAgdHJhZGluZ1BhaXI6IHN0cmluZztcbiAgICBhZG1pbklkOiBzdHJpbmc7XG4gICAgYWRtaW5Vc2VybmFtZTogc3RyaW5nO1xuICAgIGFjdGlvbjogJ2NyZWF0ZScgfCAnbW9kaWZ5JyB8ICdkZWxldGUnIHwgJ2FjdGl2YXRlJyB8ICdkZWFjdGl2YXRlJztcbiAgICB0aW1lc3RhbXA6IG51bWJlcjtcbiAgICBvcmlnaW5hbFByaWNlPzogbnVtYmVyO1xuICAgIGFkanVzdGVkUHJpY2U/OiBudW1iZXI7XG4gICAgcHJpY2VEZXZpYXRpb24/OiBudW1iZXI7XG4gICAgaW50ZXJ2ZW50aW9uQ29uZmlnOiB7XG4gICAgICAgIHN0YXJ0VGltZTogc3RyaW5nO1xuICAgICAgICBlbmRUaW1lOiBzdHJpbmc7XG4gICAgICAgIG1pblByaWNlOiBudW1iZXI7XG4gICAgICAgIG1heFByaWNlOiBudW1iZXI7XG4gICAgICAgIHRyZW5kOiBzdHJpbmc7XG4gICAgfTtcbiAgICByZWFzb246IHN0cmluZztcbiAgICBkdXJhdGlvbj86IG51bWJlcjsgLy8g5bmy6aKE5oyB57ut5pe26Ze077yI5q+r56eS77yJXG59XG5cbi8vIOaAp+iDveebkeaOp+aMh+agh1xuaW50ZXJmYWNlIFBlcmZvcm1hbmNlTWV0cmljcyB7XG4gICAgaW50ZXJ2ZW50aW9uRXhlY3V0aW9uVGltZTogTWFwPHN0cmluZywgbnVtYmVyPjtcbiAgICBwcmljZURldmlhdGlvbkhpc3Rvcnk6IE1hcDxzdHJpbmcsIG51bWJlcltdPjtcbiAgICB1c2VySW1wYWN0Q291bnQ6IE1hcDxzdHJpbmcsIG51bWJlcj47XG4gICAgc3lzdGVtTG9hZDoge1xuICAgICAgICB0aW1lc3RhbXA6IG51bWJlcjtcbiAgICAgICAgY3B1VXNhZ2U/OiBudW1iZXI7XG4gICAgICAgIG1lbW9yeVVzYWdlPzogbnVtYmVyO1xuICAgICAgICBhY3RpdmVVc2VyczogbnVtYmVyO1xuICAgICAgICBhY3RpdmVJbnRlcnZlbnRpb25zOiBudW1iZXI7XG4gICAgfVtdO1xufVxuXG5pbnRlcmZhY2UgRW5oYW5jZWRMb2dzQ29udGV4dFR5cGUge1xuICAgIGxvZ3M6IEFjdGlvbkxvZ1tdO1xuICAgIGF1ZGl0TG9nczogQXVkaXRMb2dbXTtcbiAgICBpbnRlcnZlbnRpb25Mb2dzOiBNYXJrZXRJbnRlcnZlbnRpb25Mb2dbXTtcbiAgICBwZXJmb3JtYW5jZU1ldHJpY3M6IFBlcmZvcm1hbmNlTWV0cmljcztcbiAgICBhZGRMb2c6IChwYXJhbXM6IEVuaGFuY2VkTG9nUGFyYW1zKSA9PiB2b2lkO1xuICAgIGFkZEF1ZGl0TG9nOiAobG9nOiBPbWl0PEF1ZGl0TG9nLCAnaWQnIHwgJ3RpbWVzdGFtcCc+KSA9PiB2b2lkO1xuICAgIGFkZEludGVydmVudGlvbkxvZzogKGxvZzogT21pdDxNYXJrZXRJbnRlcnZlbnRpb25Mb2csICdpZCcgfCAndGltZXN0YW1wJz4pID0+IHZvaWQ7XG4gICAgdHJhY2tQZXJmb3JtYW5jZTogKGludGVydmVudGlvbklkOiBzdHJpbmcsIGV4ZWN1dGlvblRpbWU6IG51bWJlciwgcHJpY2VJbXBhY3Q/OiBudW1iZXIpID0+IHZvaWQ7XG4gICAgZ2V0TG9nc0J5RW50aXR5OiAoZW50aXR5VHlwZTogc3RyaW5nLCBlbnRpdHlJZDogc3RyaW5nKSA9PiBBY3Rpb25Mb2dbXTtcbiAgICBnZXRBdWRpdExvZ3NCeUFkbWluOiAoYWRtaW5JZDogc3RyaW5nKSA9PiBBdWRpdExvZ1tdO1xuICAgIGdldEludGVydmVudGlvbkxvZ3NCeVBhaXI6ICh0cmFkaW5nUGFpcjogc3RyaW5nKSA9PiBNYXJrZXRJbnRlcnZlbnRpb25Mb2dbXTtcbiAgICBleHBvcnRMb2dzOiAodHlwZTogJ2FjdGlvbicgfCAnYXVkaXQnIHwgJ2ludGVydmVudGlvbicsIHN0YXJ0RGF0ZT86IERhdGUsIGVuZERhdGU/OiBEYXRlKSA9PiBzdHJpbmc7XG59XG5cbmNvbnN0IEVuaGFuY2VkTG9nc0NvbnRleHQgPSBjcmVhdGVDb250ZXh0PEVuaGFuY2VkTG9nc0NvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5leHBvcnQgZnVuY3Rpb24gRW5oYW5jZWRMb2dzUHJvdmlkZXIoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdE5vZGUgfSkge1xuICAgIGNvbnN0IHsgdXNlcjogYWRtaW5Vc2VyIH0gPSB1c2VBdXRoKCk7XG4gICAgY29uc3QgW2xvZ3MsIHNldExvZ3NdID0gdXNlU3RhdGU8QWN0aW9uTG9nW10+KFtdKTtcbiAgICBjb25zdCBbYXVkaXRMb2dzLCBzZXRBdWRpdExvZ3NdID0gdXNlU3RhdGU8QXVkaXRMb2dbXT4oW10pO1xuICAgIGNvbnN0IFtpbnRlcnZlbnRpb25Mb2dzLCBzZXRJbnRlcnZlbnRpb25Mb2dzXSA9IHVzZVN0YXRlPE1hcmtldEludGVydmVudGlvbkxvZ1tdPihbXSk7XG4gICAgY29uc3QgW3BlcmZvcm1hbmNlTWV0cmljcywgc2V0UGVyZm9ybWFuY2VNZXRyaWNzXSA9IHVzZVN0YXRlPFBlcmZvcm1hbmNlTWV0cmljcz4oe1xuICAgICAgICBpbnRlcnZlbnRpb25FeGVjdXRpb25UaW1lOiBuZXcgTWFwKCksXG4gICAgICAgIHByaWNlRGV2aWF0aW9uSGlzdG9yeTogbmV3IE1hcCgpLFxuICAgICAgICB1c2VySW1wYWN0Q291bnQ6IG5ldyBNYXAoKSxcbiAgICAgICAgc3lzdGVtTG9hZDogW11cbiAgICB9KTtcbiAgICBjb25zdCBbaXNMb2FkZWQsIHNldElzTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAgIC8vIOiOt+WPluWuouaIt+err+S/oeaBr1xuICAgIGNvbnN0IGdldENsaWVudEluZm8gPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIHt9O1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXBBZGRyZXNzOiAnY2xpZW50LXNpZGUnLCAvLyDlnKjlrp7pmYXlupTnlKjkuK3lupTor6Xku47mnI3liqHlmajojrflj5ZcbiAgICAgICAgICAgIHVzZXJBZ2VudDogbmF2aWdhdG9yLnVzZXJBZ2VudCxcbiAgICAgICAgICAgIHNlc3Npb25JZDogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnc2Vzc2lvbklkJykgfHwgYHNlc3Npb25fJHtEYXRlLm5vdygpfWBcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyDliqDovb3miYDmnInml6Xlv5fmlbDmja5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8g5Yqg6L295pON5L2c5pel5b+XXG4gICAgICAgICAgICBjb25zdCBzdG9yZWRMb2dzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9HU19TVE9SQUdFX0tFWSk7XG4gICAgICAgICAgICBpZiAoc3RvcmVkTG9ncykge1xuICAgICAgICAgICAgICAgIHNldExvZ3MoSlNPTi5wYXJzZShzdG9yZWRMb2dzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIOWKoOi9veWuoeiuoeaXpeW/l1xuICAgICAgICAgICAgY29uc3Qgc3RvcmVkQXVkaXRMb2dzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oQVVESVRfTE9HU19TVE9SQUdFX0tFWSk7XG4gICAgICAgICAgICBpZiAoc3RvcmVkQXVkaXRMb2dzKSB7XG4gICAgICAgICAgICAgICAgc2V0QXVkaXRMb2dzKEpTT04ucGFyc2Uoc3RvcmVkQXVkaXRMb2dzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIOWKoOi9veW5sumihOaXpeW/l1xuICAgICAgICAgICAgY29uc3Qgc3RvcmVkSW50ZXJ2ZW50aW9uTG9ncyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKElOVEVSVkVOVElPTl9MT0dTX1NUT1JBR0VfS0VZKTtcbiAgICAgICAgICAgIGlmIChzdG9yZWRJbnRlcnZlbnRpb25Mb2dzKSB7XG4gICAgICAgICAgICAgICAgc2V0SW50ZXJ2ZW50aW9uTG9ncyhKU09OLnBhcnNlKHN0b3JlZEludGVydmVudGlvbkxvZ3MpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gbG9hZCBsb2dzIGZyb20gbG9jYWxTdG9yYWdlXCIsIGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRJc0xvYWRlZCh0cnVlKTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyDkv53lrZjml6Xlv5fmlbDmja5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoaXNMb2FkZWQpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTE9HU19TVE9SQUdFX0tFWSwgSlNPTi5zdHJpbmdpZnkobG9ncykpO1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKEFVRElUX0xPR1NfU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KGF1ZGl0TG9ncykpO1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKElOVEVSVkVOVElPTl9MT0dTX1NUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShpbnRlcnZlbnRpb25Mb2dzKSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gc2F2ZSBsb2dzIHRvIGxvY2FsU3RvcmFnZVwiLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBbbG9ncywgYXVkaXRMb2dzLCBpbnRlcnZlbnRpb25Mb2dzLCBpc0xvYWRlZF0pO1xuXG4gICAgLy8g5aKe5by655qE5pON5L2c5pel5b+X6K6w5b2VXG4gICAgY29uc3QgYWRkTG9nID0gdXNlQ2FsbGJhY2soKHBhcmFtczogRW5oYW5jZWRMb2dQYXJhbXMpID0+IHtcbiAgICAgICAgY29uc3QgYWN0b3IgPSBwYXJhbXMuYWN0b3IgfHwgYWRtaW5Vc2VyO1xuICAgICAgICBpZiAoIWFjdG9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJMb2cgbm90IGFkZGVkOiBObyBhY3RvciBmb3VuZC5cIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjbGllbnRJbmZvID0gZ2V0Q2xpZW50SW5mbygpO1xuICAgICAgICBjb25zdCBuZXdMb2c6IEFjdGlvbkxvZyA9IHtcbiAgICAgICAgICAgIGlkOiBgbG9nXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YCxcbiAgICAgICAgICAgIGVudGl0eV90eXBlOiBwYXJhbXMuZW50aXR5X3R5cGUsXG4gICAgICAgICAgICBlbnRpdHlfaWQ6IHBhcmFtcy5lbnRpdHlfaWQsXG4gICAgICAgICAgICBhY3Rpb246IHBhcmFtcy5hY3Rpb24sXG4gICAgICAgICAgICBkZXRhaWxzOiBwYXJhbXMuZGV0YWlscyxcbiAgICAgICAgICAgIG9wZXJhdG9yX2lkOiBhY3Rvci5pZCxcbiAgICAgICAgICAgIG9wZXJhdG9yX3VzZXJuYW1lOiBhY3Rvci51c2VybmFtZSxcbiAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgfTtcblxuICAgICAgICBzZXRMb2dzKHByZXYgPT4gW25ld0xvZywgLi4ucHJldl0uc2xpY2UoMCwgNTAwMCkpOyAvLyDkv53nlZnmnIDov5E1MDAw5p2h6K6w5b2VXG5cbiAgICAgICAgLy8g5a+55LqO6auY6aOO6Zmp5pON5L2c77yM5ZCM5pe26K6w5b2V5a6h6K6h5pel5b+XXG4gICAgICAgIGlmIChwYXJhbXMuc2V2ZXJpdHkgPT09ICdoaWdoJyB8fCBwYXJhbXMuc2V2ZXJpdHkgPT09ICdjcml0aWNhbCcpIHtcbiAgICAgICAgICAgIGFkZEF1ZGl0TG9nKHtcbiAgICAgICAgICAgICAgICBhZG1pbklkOiBhY3Rvci5pZCxcbiAgICAgICAgICAgICAgICBhZG1pblVzZXJuYW1lOiBhY3Rvci51c2VybmFtZSxcbiAgICAgICAgICAgICAgICBhY3Rpb246IHBhcmFtcy5hY3Rpb24sXG4gICAgICAgICAgICAgICAgdGFyZ2V0VHlwZTogcGFyYW1zLmVudGl0eV90eXBlLFxuICAgICAgICAgICAgICAgIHRhcmdldElkOiBwYXJhbXMuZW50aXR5X2lkLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBwYXJhbXMuZGV0YWlscyxcbiAgICAgICAgICAgICAgICBzZXZlcml0eTogcGFyYW1zLnNldmVyaXR5LFxuICAgICAgICAgICAgICAgIC4uLmNsaWVudEluZm9cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSwgW2FkbWluVXNlciwgZ2V0Q2xpZW50SW5mb10pO1xuXG4gICAgLy8g5a6h6K6h5pel5b+X6K6w5b2VXG4gICAgY29uc3QgYWRkQXVkaXRMb2cgPSB1c2VDYWxsYmFjaygobG9nOiBPbWl0PEF1ZGl0TG9nLCAnaWQnIHwgJ3RpbWVzdGFtcCc+KSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld0F1ZGl0TG9nOiBBdWRpdExvZyA9IHtcbiAgICAgICAgICAgIC4uLmxvZyxcbiAgICAgICAgICAgIGlkOiBgYXVkaXRfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gLFxuICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxuICAgICAgICB9O1xuXG4gICAgICAgIHNldEF1ZGl0TG9ncyhwcmV2ID0+IFtuZXdBdWRpdExvZywgLi4ucHJldl0uc2xpY2UoMCwgMjAwMCkpOyAvLyDkv53nlZnmnIDov5EyMDAw5p2h5a6h6K6h6K6w5b2VXG5cbiAgICAgICAgLy8g5YWz6ZSu5pON5L2c5a6e5pe25ZGK6K2mXG4gICAgICAgIGlmIChsb2cuc2V2ZXJpdHkgPT09ICdjcml0aWNhbCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignQ1JJVElDQUwgQVVESVQgRVZFTlQ6JywgbmV3QXVkaXRMb2cpO1xuICAgICAgICAgICAgLy8g5Zyo5a6e6ZmF5bqU55So5Lit77yM6L+Z6YeM5bqU6K+l5Y+R6YCB5ZGK6K2m6YCa55+lXG4gICAgICAgIH1cbiAgICB9LCBbXSk7XG5cbiAgICAvLyDluILlnLrlubLpooTml6Xlv5forrDlvZVcbiAgICBjb25zdCBhZGRJbnRlcnZlbnRpb25Mb2cgPSB1c2VDYWxsYmFjaygobG9nOiBPbWl0PE1hcmtldEludGVydmVudGlvbkxvZywgJ2lkJyB8ICd0aW1lc3RhbXAnPikgPT4ge1xuICAgICAgICBjb25zdCBuZXdJbnRlcnZlbnRpb25Mb2c6IE1hcmtldEludGVydmVudGlvbkxvZyA9IHtcbiAgICAgICAgICAgIC4uLmxvZyxcbiAgICAgICAgICAgIGlkOiBgaW50ZXJ2ZW50aW9uXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YCxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgICAgfTtcblxuICAgICAgICBzZXRJbnRlcnZlbnRpb25Mb2dzKHByZXYgPT4gW25ld0ludGVydmVudGlvbkxvZywgLi4ucHJldl0uc2xpY2UoMCwgMTAwMCkpOyAvLyDkv53nlZnmnIDov5ExMDAw5p2h5bmy6aKE6K6w5b2VXG5cbiAgICAgICAgLy8g5aSn5bmF5Lu35qC85YGP5beu5ZGK6K2mXG4gICAgICAgIGlmIChsb2cucHJpY2VEZXZpYXRpb24gJiYgbG9nLnByaWNlRGV2aWF0aW9uID4gMC4xKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0xhcmdlIHByaWNlIGRldmlhdGlvbiBkZXRlY3RlZDonLCBuZXdJbnRlcnZlbnRpb25Mb2cpO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuXG4gICAgLy8g5oCn6IO955uR5o6nXG4gICAgY29uc3QgdHJhY2tQZXJmb3JtYW5jZSA9IHVzZUNhbGxiYWNrKChpbnRlcnZlbnRpb25JZDogc3RyaW5nLCBleGVjdXRpb25UaW1lOiBudW1iZXIsIHByaWNlSW1wYWN0PzogbnVtYmVyKSA9PiB7XG4gICAgICAgIHNldFBlcmZvcm1hbmNlTWV0cmljcyhwcmV2ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld01ldHJpY3MgPSB7IC4uLnByZXYgfTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8g6K6w5b2V5omn6KGM5pe26Ze0XG4gICAgICAgICAgICBuZXdNZXRyaWNzLmludGVydmVudGlvbkV4ZWN1dGlvblRpbWUuc2V0KGludGVydmVudGlvbklkLCBleGVjdXRpb25UaW1lKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8g6K6w5b2V5Lu35qC85b2x5ZONXG4gICAgICAgICAgICBpZiAocHJpY2VJbXBhY3QgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhpc3RvcnkgPSBuZXdNZXRyaWNzLnByaWNlRGV2aWF0aW9uSGlzdG9yeS5nZXQoaW50ZXJ2ZW50aW9uSWQpIHx8IFtdO1xuICAgICAgICAgICAgICAgIGhpc3RvcnkucHVzaChwcmljZUltcGFjdCk7XG4gICAgICAgICAgICAgICAgbmV3TWV0cmljcy5wcmljZURldmlhdGlvbkhpc3Rvcnkuc2V0KGludGVydmVudGlvbklkLCBoaXN0b3J5LnNsaWNlKC0xMDApKTsgLy8g5L+d55WZ5pyA6L+RMTAw5qyh6K6w5b2VXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIOiusOW9leezu+e7n+i0n+i9vVxuICAgICAgICAgICAgY29uc3QgY3VycmVudExvYWQgPSB7XG4gICAgICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxuICAgICAgICAgICAgICAgIGFjdGl2ZVVzZXJzOiAwLCAvLyDlnKjlrp7pmYXlupTnlKjkuK3lupTor6Xku47nlKjmiLfkuIrkuIvmlofojrflj5ZcbiAgICAgICAgICAgICAgICBhY3RpdmVJbnRlcnZlbnRpb25zOiBpbnRlcnZlbnRpb25Mb2dzLmZpbHRlcihsb2cgPT4gXG4gICAgICAgICAgICAgICAgICAgIERhdGUubm93KCkgLSBsb2cudGltZXN0YW1wIDwgMjQgKiA2MCAqIDYwICogMTAwMCAvLyAyNOWwj+aXtuWGheeahOW5sumihFxuICAgICAgICAgICAgICAgICkubGVuZ3RoXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbmV3TWV0cmljcy5zeXN0ZW1Mb2FkID0gWy4uLm5ld01ldHJpY3Muc3lzdGVtTG9hZCwgY3VycmVudExvYWRdLnNsaWNlKC0xMDAwKTsgLy8g5L+d55WZ5pyA6L+RMTAwMOS4qui0n+i9veiusOW9lVxuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gbmV3TWV0cmljcztcbiAgICAgICAgfSk7XG4gICAgfSwgW2ludGVydmVudGlvbkxvZ3NdKTtcblxuICAgIC8vIOafpeivouWKn+iDvVxuICAgIGNvbnN0IGdldExvZ3NCeUVudGl0eSA9IHVzZUNhbGxiYWNrKChlbnRpdHlUeXBlOiBzdHJpbmcsIGVudGl0eUlkOiBzdHJpbmcpID0+IHtcbiAgICAgICAgcmV0dXJuIGxvZ3MuZmlsdGVyKGxvZyA9PiBsb2cuZW50aXR5X3R5cGUgPT09IGVudGl0eVR5cGUgJiYgbG9nLmVudGl0eV9pZCA9PT0gZW50aXR5SWQpO1xuICAgIH0sIFtsb2dzXSk7XG5cbiAgICBjb25zdCBnZXRBdWRpdExvZ3NCeUFkbWluID0gdXNlQ2FsbGJhY2soKGFkbWluSWQ6IHN0cmluZykgPT4ge1xuICAgICAgICByZXR1cm4gYXVkaXRMb2dzLmZpbHRlcihsb2cgPT4gbG9nLmFkbWluSWQgPT09IGFkbWluSWQpO1xuICAgIH0sIFthdWRpdExvZ3NdKTtcblxuICAgIGNvbnN0IGdldEludGVydmVudGlvbkxvZ3NCeVBhaXIgPSB1c2VDYWxsYmFjaygodHJhZGluZ1BhaXI6IHN0cmluZykgPT4ge1xuICAgICAgICByZXR1cm4gaW50ZXJ2ZW50aW9uTG9ncy5maWx0ZXIobG9nID0+IGxvZy50cmFkaW5nUGFpciA9PT0gdHJhZGluZ1BhaXIpO1xuICAgIH0sIFtpbnRlcnZlbnRpb25Mb2dzXSk7XG5cbiAgICAvLyDlr7zlh7rlip/og71cbiAgICBjb25zdCBleHBvcnRMb2dzID0gdXNlQ2FsbGJhY2soKFxuICAgICAgICB0eXBlOiAnYWN0aW9uJyB8ICdhdWRpdCcgfCAnaW50ZXJ2ZW50aW9uJywgXG4gICAgICAgIHN0YXJ0RGF0ZT86IERhdGUsIFxuICAgICAgICBlbmREYXRlPzogRGF0ZVxuICAgICk6IHN0cmluZyA9PiB7XG4gICAgICAgIGxldCBkYXRhVG9FeHBvcnQ6IGFueVtdID0gW107XG4gICAgICAgIFxuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ2FjdGlvbic6XG4gICAgICAgICAgICAgICAgZGF0YVRvRXhwb3J0ID0gbG9ncztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2F1ZGl0JzpcbiAgICAgICAgICAgICAgICBkYXRhVG9FeHBvcnQgPSBhdWRpdExvZ3M7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdpbnRlcnZlbnRpb24nOlxuICAgICAgICAgICAgICAgIGRhdGFUb0V4cG9ydCA9IGludGVydmVudGlvbkxvZ3M7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDml6XmnJ/ov4fmu6RcbiAgICAgICAgaWYgKHN0YXJ0RGF0ZSB8fCBlbmREYXRlKSB7XG4gICAgICAgICAgICBkYXRhVG9FeHBvcnQgPSBkYXRhVG9FeHBvcnQuZmlsdGVyKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1EYXRlID0gbmV3IERhdGUoaXRlbS5jcmVhdGVkX2F0IHx8IGl0ZW0udGltZXN0YW1wKTtcbiAgICAgICAgICAgICAgICBpZiAoc3RhcnREYXRlICYmIGl0ZW1EYXRlIDwgc3RhcnREYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKGVuZERhdGUgJiYgaXRlbURhdGUgPiBlbmREYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOi9rOaNouS4ukNTVuagvOW8j1xuICAgICAgICBpZiAoZGF0YVRvRXhwb3J0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuICcnO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IE9iamVjdC5rZXlzKGRhdGFUb0V4cG9ydFswXSkuam9pbignLCcpO1xuICAgICAgICBjb25zdCByb3dzID0gZGF0YVRvRXhwb3J0Lm1hcChpdGVtID0+IFxuICAgICAgICAgICAgT2JqZWN0LnZhbHVlcyhpdGVtKS5tYXAodmFsdWUgPT4gXG4gICAgICAgICAgICAgICAgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyA/IEpTT04uc3RyaW5naWZ5KHZhbHVlKSA6IFN0cmluZyh2YWx1ZSlcbiAgICAgICAgICAgICkuam9pbignLCcpXG4gICAgICAgICk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gW2hlYWRlcnMsIC4uLnJvd3NdLmpvaW4oJ1xcbicpO1xuICAgIH0sIFtsb2dzLCBhdWRpdExvZ3MsIGludGVydmVudGlvbkxvZ3NdKTtcblxuICAgIGNvbnN0IHZhbHVlOiBFbmhhbmNlZExvZ3NDb250ZXh0VHlwZSA9IHtcbiAgICAgICAgbG9ncyxcbiAgICAgICAgYXVkaXRMb2dzLFxuICAgICAgICBpbnRlcnZlbnRpb25Mb2dzLFxuICAgICAgICBwZXJmb3JtYW5jZU1ldHJpY3MsXG4gICAgICAgIGFkZExvZyxcbiAgICAgICAgYWRkQXVkaXRMb2csXG4gICAgICAgIGFkZEludGVydmVudGlvbkxvZyxcbiAgICAgICAgdHJhY2tQZXJmb3JtYW5jZSxcbiAgICAgICAgZ2V0TG9nc0J5RW50aXR5LFxuICAgICAgICBnZXRBdWRpdExvZ3NCeUFkbWluLFxuICAgICAgICBnZXRJbnRlcnZlbnRpb25Mb2dzQnlQYWlyLFxuICAgICAgICBleHBvcnRMb2dzLFxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8RW5oYW5jZWRMb2dzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17dmFsdWV9PlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0VuaGFuY2VkTG9nc0NvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUVuaGFuY2VkTG9ncygpIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChFbmhhbmNlZExvZ3NDb250ZXh0KTtcbiAgICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndXNlRW5oYW5jZWRMb2dzIG11c3QgYmUgdXNlZCB3aXRoaW4gYW4gRW5oYW5jZWRMb2dzUHJvdmlkZXInKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHQ7XG59Il0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUNhbGxiYWNrIiwidXNlQXV0aCIsIkxPR1NfU1RPUkFHRV9LRVkiLCJBVURJVF9MT0dTX1NUT1JBR0VfS0VZIiwiSU5URVJWRU5USU9OX0xPR1NfU1RPUkFHRV9LRVkiLCJFbmhhbmNlZExvZ3NDb250ZXh0IiwidW5kZWZpbmVkIiwiRW5oYW5jZWRMb2dzUHJvdmlkZXIiLCJjaGlsZHJlbiIsInVzZXIiLCJhZG1pblVzZXIiLCJsb2dzIiwic2V0TG9ncyIsImF1ZGl0TG9ncyIsInNldEF1ZGl0TG9ncyIsImludGVydmVudGlvbkxvZ3MiLCJzZXRJbnRlcnZlbnRpb25Mb2dzIiwicGVyZm9ybWFuY2VNZXRyaWNzIiwic2V0UGVyZm9ybWFuY2VNZXRyaWNzIiwiaW50ZXJ2ZW50aW9uRXhlY3V0aW9uVGltZSIsIk1hcCIsInByaWNlRGV2aWF0aW9uSGlzdG9yeSIsInVzZXJJbXBhY3RDb3VudCIsInN5c3RlbUxvYWQiLCJpc0xvYWRlZCIsInNldElzTG9hZGVkIiwiZ2V0Q2xpZW50SW5mbyIsImlwQWRkcmVzcyIsInVzZXJBZ2VudCIsIm5hdmlnYXRvciIsInNlc3Npb25JZCIsInNlc3Npb25TdG9yYWdlIiwiZ2V0SXRlbSIsIkRhdGUiLCJub3ciLCJzdG9yZWRMb2dzIiwibG9jYWxTdG9yYWdlIiwiSlNPTiIsInBhcnNlIiwic3RvcmVkQXVkaXRMb2dzIiwic3RvcmVkSW50ZXJ2ZW50aW9uTG9ncyIsImVycm9yIiwiY29uc29sZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJhZGRMb2ciLCJwYXJhbXMiLCJhY3RvciIsIndhcm4iLCJjbGllbnRJbmZvIiwibmV3TG9nIiwiaWQiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiLCJlbnRpdHlfdHlwZSIsImVudGl0eV9pZCIsImFjdGlvbiIsImRldGFpbHMiLCJvcGVyYXRvcl9pZCIsIm9wZXJhdG9yX3VzZXJuYW1lIiwidXNlcm5hbWUiLCJjcmVhdGVkX2F0IiwidG9JU09TdHJpbmciLCJwcmV2Iiwic2xpY2UiLCJzZXZlcml0eSIsImFkZEF1ZGl0TG9nIiwiYWRtaW5JZCIsImFkbWluVXNlcm5hbWUiLCJ0YXJnZXRUeXBlIiwidGFyZ2V0SWQiLCJkZXNjcmlwdGlvbiIsImxvZyIsIm5ld0F1ZGl0TG9nIiwidGltZXN0YW1wIiwiYWRkSW50ZXJ2ZW50aW9uTG9nIiwibmV3SW50ZXJ2ZW50aW9uTG9nIiwicHJpY2VEZXZpYXRpb24iLCJ0cmFja1BlcmZvcm1hbmNlIiwiaW50ZXJ2ZW50aW9uSWQiLCJleGVjdXRpb25UaW1lIiwicHJpY2VJbXBhY3QiLCJuZXdNZXRyaWNzIiwic2V0IiwiaGlzdG9yeSIsImdldCIsInB1c2giLCJjdXJyZW50TG9hZCIsImFjdGl2ZVVzZXJzIiwiYWN0aXZlSW50ZXJ2ZW50aW9ucyIsImZpbHRlciIsImxlbmd0aCIsImdldExvZ3NCeUVudGl0eSIsImVudGl0eVR5cGUiLCJlbnRpdHlJZCIsImdldEF1ZGl0TG9nc0J5QWRtaW4iLCJnZXRJbnRlcnZlbnRpb25Mb2dzQnlQYWlyIiwidHJhZGluZ1BhaXIiLCJleHBvcnRMb2dzIiwidHlwZSIsInN0YXJ0RGF0ZSIsImVuZERhdGUiLCJkYXRhVG9FeHBvcnQiLCJpdGVtIiwiaXRlbURhdGUiLCJoZWFkZXJzIiwiT2JqZWN0Iiwia2V5cyIsImpvaW4iLCJyb3dzIiwibWFwIiwidmFsdWVzIiwidmFsdWUiLCJTdHJpbmciLCJQcm92aWRlciIsInVzZUVuaGFuY2VkTG9ncyIsImNvbnRleHQiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/enhanced-logs-context.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/context/enhanced-system-settings-context.tsx":
/*!**********************************************************!*\
  !*** ./src/context/enhanced-system-settings-context.tsx ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnhancedSystemSettingsProvider: () => (/* binding */ EnhancedSystemSettingsProvider),\n/* harmony export */   useEnhancedSystemSettings: () => (/* binding */ useEnhancedSystemSettings)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/types */ \"(app-pages-browser)/./src/types/index.ts\");\n/* harmony import */ var _enhanced_logs_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enhanced-logs-context */ \"(app-pages-browser)/./src/context/enhanced-logs-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ EnhancedSystemSettingsProvider,useEnhancedSystemSettings auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst SETTINGS_STORAGE_KEY = 'tradeflow_system_settings_v5';\n// 默认设置\nconst getDefaultPairSettings = ()=>({\n        isTradingHalted: false,\n        baseProfitRate: 0.85,\n        maxDailyVolume: 1000000,\n        priceFluctuationLimit: 0.1,\n        emergencyStop: false\n    });\nconst defaultRiskControlSettings = {\n    maxInterventionsPerDay: 10,\n    maxPriceDeviationGlobal: 0.2,\n    autoStopLossThreshold: 0.15,\n    alertThresholds: {\n        largeVolumeAlert: 100000,\n        rapidPriceChangeAlert: 0.05,\n        systemLoadAlert: 0.8\n    }\n};\nconst defaultSystemMonitoringSettings = {\n    enableRealTimeMonitoring: true,\n    logRetentionDays: 30,\n    performanceMetricsEnabled: true,\n    alertNotificationsEnabled: true,\n    autoBackupEnabled: true,\n    backupIntervalHours: 24\n};\nconst defaultMarketSettings = _types__WEBPACK_IMPORTED_MODULE_2__.availablePairs.reduce((acc, pair)=>{\n    acc[pair] = getDefaultPairSettings();\n    return acc;\n}, {});\nconst defaultEnhancedSystemSettings = {\n    depositAddresses: {\n        USDT: \"\",\n        ETH: \"\",\n        BTC: \"\",\n        USD: \"\"\n    },\n    contractTradingEnabled: true,\n    marketSettings: defaultMarketSettings,\n    marketInterventions: [],\n    riskControl: defaultRiskControlSettings,\n    systemMonitoring: defaultSystemMonitoringSettings,\n    systemVersion: \"2.0.0\"\n};\n// 增强的时间逻辑函数\nconst isTimeInRange = (currentTime, startTime, endTime)=>{\n    const currentMinutes = currentTime.getHours() * 60 + currentTime.getMinutes();\n    const [startHour, startMin] = startTime.split(':').map(Number);\n    const [endHour, endMin] = endTime.split(':').map(Number);\n    const startMinutes = startHour * 60 + startMin;\n    const endMinutes = endHour * 60 + endMin;\n    // 处理跨日情况 (例如: 23:00 - 01:00)\n    if (startMinutes > endMinutes) {\n        return currentMinutes >= startMinutes || currentMinutes <= endMinutes;\n    }\n    // 正常情况 (例如: 09:00 - 17:00)\n    return currentMinutes >= startMinutes && currentMinutes <= endMinutes;\n};\nconst isDateInRange = (currentDate, startDate, endDate)=>{\n    if (!startDate && !endDate) return true;\n    const current = currentDate.toISOString().split('T')[0];\n    if (startDate && current < startDate) return false;\n    if (endDate && current > endDate) return false;\n    return true;\n};\nconst isRecurringActive = (currentDate, recurring)=>{\n    if (!recurring) return true;\n    const currentDay = currentDate.getDay(); // 0=Sunday, 1=Monday, etc.\n    switch(recurring.type){\n        case 'daily':\n            return true; // 每日重复总是活跃\n        case 'weekly':\n            return !recurring.days || recurring.days.includes(currentDay);\n        case 'monthly':\n            // 简化的月度重复逻辑\n            const currentDayOfMonth = currentDate.getDate();\n            return !recurring.days || recurring.days.includes(currentDayOfMonth);\n        default:\n            return true;\n    }\n};\nconst EnhancedSystemSettingsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction EnhancedSystemSettingsProvider(param) {\n    let { children } = param;\n    _s();\n    const { addLog } = (0,_enhanced_logs_context__WEBPACK_IMPORTED_MODULE_3__.useEnhancedLogs)();\n    const [systemSettings, setSystemSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultEnhancedSystemSettings);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // const { addAuditLog, addLog } = useEnhancedLogs(); // 临时注释避免循环依赖\n    // 加载设置\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedSystemSettingsProvider.useEffect\": ()=>{\n            try {\n                const storedSettings = localStorage.getItem(SETTINGS_STORAGE_KEY);\n                if (storedSettings) {\n                    const parsedSettings = JSON.parse(storedSettings);\n                    setSystemSettings({\n                        \"EnhancedSystemSettingsProvider.useEffect\": (prev)=>({\n                                ...defaultEnhancedSystemSettings,\n                                ...parsedSettings,\n                                marketSettings: {\n                                    ...defaultEnhancedSystemSettings.marketSettings,\n                                    ...parsedSettings.marketSettings || {}\n                                },\n                                depositAddresses: {\n                                    ...defaultEnhancedSystemSettings.depositAddresses,\n                                    ...parsedSettings.depositAddresses || {}\n                                },\n                                riskControl: {\n                                    ...defaultEnhancedSystemSettings.riskControl,\n                                    ...parsedSettings.riskControl || {}\n                                },\n                                systemMonitoring: {\n                                    ...defaultEnhancedSystemSettings.systemMonitoring,\n                                    ...parsedSettings.systemMonitoring || {}\n                                },\n                                marketInterventions: parsedSettings.marketInterventions || []\n                            })\n                    }[\"EnhancedSystemSettingsProvider.useEffect\"]);\n                }\n            } catch (error) {\n                console.error(\"Failed to load enhanced system settings from localStorage\", error);\n            }\n            setIsLoaded(true);\n        }\n    }[\"EnhancedSystemSettingsProvider.useEffect\"], []);\n    // 保存设置\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedSystemSettingsProvider.useEffect\": ()=>{\n            if (isLoaded) {\n                try {\n                    localStorage.setItem(SETTINGS_STORAGE_KEY, JSON.stringify(systemSettings));\n                } catch (error) {\n                    console.error(\"Failed to save enhanced system settings to localStorage\", error);\n                }\n            }\n        }\n    }[\"EnhancedSystemSettingsProvider.useEffect\"], [\n        systemSettings,\n        isLoaded\n    ]);\n    // 基础设置更新函数\n    const updateDepositAddress = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\": (asset, value)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\": (prevSettings)=>({\n                        ...prevSettings,\n                        depositAddresses: {\n                            ...prevSettings.depositAddresses,\n                            [asset]: value\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated \".concat(asset, \" deposit address\"));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateDepositAddress]\"], [\n        addLog\n    ]);\n    const updateSetting = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateSetting]\": (key, value)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateSetting]\": (prevSettings)=>({\n                        ...prevSettings,\n                        [key]: value\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateSetting]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated system setting: \".concat(String(key)));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateSetting]\"], [\n        addLog\n    ]);\n    const updatePairSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\": (pair, newSettings)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\": (prev)=>({\n                        ...prev,\n                        marketSettings: {\n                            ...prev.marketSettings,\n                            [pair]: {\n                                ...prev.marketSettings[pair] || getDefaultPairSettings(),\n                                ...newSettings\n                            }\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated trading pair settings for \".concat(pair));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updatePairSettings]\"], [\n        addLog\n    ]);\n    const updateRiskControlSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\": (newSettings)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\": (prev)=>({\n                        ...prev,\n                        riskControl: {\n                            ...prev.riskControl,\n                            ...newSettings\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log('Updated risk control settings');\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateRiskControlSettings]\"], [\n        addLog\n    ]);\n    const updateSystemMonitoringSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\": (newSettings)=>{\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\": (prev)=>({\n                        ...prev,\n                        systemMonitoring: {\n                            ...prev.systemMonitoring,\n                            ...newSettings\n                        }\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log('Updated system monitoring settings');\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateSystemMonitoringSettings]\"], [\n        addLog\n    ]);\n    // 增强的干预管理\n    const addMarketIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\": (intervention)=>{\n            if (systemSettings.marketInterventions.length >= 10) {\n                throw new Error('Maximum number of interventions (10) reached');\n            }\n            const newId = \"intervention-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n            const now = new Date().toISOString();\n            const newIntervention = {\n                id: newId,\n                tradingPair: 'BTC/USDT',\n                startTime: '10:00',\n                endTime: '11:00',\n                minPrice: 110000,\n                maxPrice: 120000,\n                trend: 'random',\n                priority: 5,\n                conflictResolution: 'override',\n                isActive: false,\n                createdBy: 'admin',\n                createdAt: now,\n                smoothTransition: true,\n                transitionDuration: 30000,\n                ...intervention\n            };\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\": (prev)=>({\n                        ...prev,\n                        marketInterventions: [\n                            ...prev.marketInterventions,\n                            newIntervention\n                        ]\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Created market intervention for \".concat(newIntervention.tradingPair));\n            return newId;\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[addMarketIntervention]\"], [\n        systemSettings.marketInterventions.length\n    ]);\n    const removeMarketIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\": (id)=>{\n            const intervention = systemSettings.marketInterventions.find({\n                \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention].intervention\": (i)=>i.id === id\n            }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention].intervention\"]);\n            if (!intervention) return;\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\": (prev)=>({\n                        ...prev,\n                        marketInterventions: prev.marketInterventions.filter({\n                            \"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\": (i)=>i.id !== id\n                        }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\"])\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Deleted market intervention for \".concat(intervention.tradingPair));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[removeMarketIntervention]\"], [\n        systemSettings.marketInterventions,\n        addLog\n    ]);\n    const updateMarketIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\": (id, updates)=>{\n            const intervention = systemSettings.marketInterventions.find({\n                \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention].intervention\": (i)=>i.id === id\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention].intervention\"]);\n            if (!intervention) return;\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\": (prev)=>({\n                        ...prev,\n                        marketInterventions: prev.marketInterventions.map({\n                            \"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\": (i)=>i.id === id ? {\n                                    ...i,\n                                    ...updates,\n                                    lastModifiedBy: 'admin',\n                                    lastModifiedAt: new Date().toISOString()\n                                } : i\n                        }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\"])\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\"]);\n            // 临时注释日志记录，避免循环依赖\n            console.log(\"Updated market intervention for \".concat(intervention.tradingPair));\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[updateMarketIntervention]\"], [\n        systemSettings.marketInterventions,\n        addLog\n    ]);\n    const activateIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[activateIntervention]\": (id)=>{\n            updateMarketIntervention(id, {\n                isActive: true\n            });\n            addLog({\n                entity_type: 'market_intervention',\n                entity_id: id,\n                action: 'activate',\n                details: 'Activated market intervention',\n                severity: 'critical'\n            });\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[activateIntervention]\"], [\n        updateMarketIntervention,\n        addLog\n    ]);\n    const deactivateIntervention = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[deactivateIntervention]\": (id)=>{\n            updateMarketIntervention(id, {\n                isActive: false\n            });\n            addLog({\n                entity_type: 'market_intervention',\n                entity_id: id,\n                action: 'deactivate',\n                details: 'Deactivated market intervention',\n                severity: 'high'\n            });\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[deactivateIntervention]\"], [\n        updateMarketIntervention,\n        addLog\n    ]);\n    // 增强的时间逻辑验证\n    const isInterventionActiveNow = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[isInterventionActiveNow]\": (intervention)=>{\n            if (!intervention.isActive) return false;\n            const now = new Date();\n            // 检查日期范围\n            if (!isDateInRange(now, intervention.startDate, intervention.endDate)) return false;\n            // 检查时间范围\n            if (!isTimeInRange(now, intervention.startTime, intervention.endTime)) return false;\n            // 检查重复模式\n            if (!isRecurringActive(now, intervention.recurring)) return false;\n            return true;\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[isInterventionActiveNow]\"], []);\n    const getActiveInterventions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\": (tradingPair)=>{\n            let activeInterventions = systemSettings.marketInterventions.filter(isInterventionActiveNow);\n            if (tradingPair) {\n                activeInterventions = activeInterventions.filter({\n                    \"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\": (i)=>i.tradingPair === tradingPair\n                }[\"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\"]);\n            }\n            // 按优先级排序\n            return activeInterventions.sort({\n                \"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\": (a, b)=>b.priority - a.priority\n            }[\"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\"]);\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[getActiveInterventions]\"], [\n        systemSettings.marketInterventions,\n        isInterventionActiveNow\n    ]);\n    const resolveInterventionConflicts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts]\": (interventions)=>{\n            if (interventions.length === 0) return null;\n            if (interventions.length === 1) return interventions[0];\n            // 按优先级排序\n            const sorted = interventions.sort({\n                \"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts].sorted\": (a, b)=>b.priority - a.priority\n            }[\"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts].sorted\"]);\n            const highest = sorted[0];\n            if (highest.conflictResolution === 'override') {\n                return highest;\n            } else if (highest.conflictResolution === 'blend') {\n                // 实现混合逻辑 - 这里简化为返回最高优先级\n                return highest;\n            }\n            return highest;\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[resolveInterventionConflicts]\"], []);\n    // 验证功能\n    const validateInterventionSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[validateInterventionSettings]\": (intervention)=>{\n            const errors = [];\n            if (intervention.minPrice && intervention.maxPrice && intervention.minPrice >= intervention.maxPrice) {\n                errors.push('Minimum price must be less than maximum price');\n            }\n            if (intervention.priority && (intervention.priority < 1 || intervention.priority > 10)) {\n                errors.push('Priority must be between 1 and 10');\n            }\n            if (intervention.startTime && intervention.endTime) {\n                const [startHour, startMin] = intervention.startTime.split(':').map(Number);\n                const [endHour, endMin] = intervention.endTime.split(':').map(Number);\n                if (isNaN(startHour) || isNaN(startMin) || isNaN(endHour) || isNaN(endMin)) {\n                    errors.push('Invalid time format');\n                }\n            }\n            if (intervention.maxPriceDeviation && intervention.maxPriceDeviation > systemSettings.riskControl.maxPriceDeviationGlobal) {\n                errors.push(\"Price deviation exceeds global limit of \".concat(systemSettings.riskControl.maxPriceDeviationGlobal * 100, \"%\"));\n            }\n            return {\n                valid: errors.length === 0,\n                errors\n            };\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[validateInterventionSettings]\"], [\n        systemSettings.riskControl.maxPriceDeviationGlobal\n    ]);\n    // 导入导出功能\n    const exportSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[exportSettings]\": ()=>{\n            return JSON.stringify(systemSettings, null, 2);\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[exportSettings]\"], [\n        systemSettings\n    ]);\n    const importSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[importSettings]\": (settingsJson)=>{\n            try {\n                const importedSettings = JSON.parse(settingsJson);\n                // 基本验证\n                if (!importedSettings.systemVersion) {\n                    return {\n                        success: false,\n                        error: 'Invalid settings format'\n                    };\n                }\n                setSystemSettings({\n                    ...defaultEnhancedSystemSettings,\n                    ...importedSettings\n                });\n                addLog({\n                    entity_type: 'system_setting',\n                    entity_id: 'import',\n                    action: 'update',\n                    details: 'Imported system settings',\n                    severity: 'critical'\n                });\n                return {\n                    success: true\n                };\n            } catch (error) {\n                return {\n                    success: false,\n                    error: 'Failed to parse settings JSON'\n                };\n            }\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[importSettings]\"], [\n        addLog\n    ]);\n    // 备份功能\n    const createBackup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[createBackup]\": ()=>{\n            const backupData = {\n                ...systemSettings,\n                backupTimestamp: new Date().toISOString()\n            };\n            localStorage.setItem(\"\".concat(SETTINGS_STORAGE_KEY, \"_backup\"), JSON.stringify(backupData));\n            setSystemSettings({\n                \"EnhancedSystemSettingsProvider.useCallback[createBackup]\": (prev)=>({\n                        ...prev,\n                        lastBackupTime: new Date().toISOString()\n                    })\n            }[\"EnhancedSystemSettingsProvider.useCallback[createBackup]\"]);\n            addLog({\n                entity_type: 'system_setting',\n                entity_id: 'backup',\n                action: 'create',\n                details: 'Created system settings backup',\n                severity: 'medium'\n            });\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[createBackup]\"], [\n        systemSettings,\n        addLog\n    ]);\n    const restoreFromBackup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedSystemSettingsProvider.useCallback[restoreFromBackup]\": (backupData)=>{\n            try {\n                const backup = JSON.parse(backupData);\n                if (!backup.systemVersion) {\n                    return {\n                        success: false,\n                        error: 'Invalid backup format'\n                    };\n                }\n                setSystemSettings(backup);\n                addLog({\n                    entity_type: 'system_setting',\n                    entity_id: 'restore',\n                    action: 'update',\n                    details: 'Restored system settings from backup',\n                    severity: 'critical'\n                });\n                return {\n                    success: true\n                };\n            } catch (error) {\n                return {\n                    success: false,\n                    error: 'Failed to restore from backup'\n                };\n            }\n        }\n    }[\"EnhancedSystemSettingsProvider.useCallback[restoreFromBackup]\"], [\n        addLog\n    ]);\n    const value = {\n        systemSettings,\n        updateDepositAddress,\n        updateSetting,\n        updatePairSettings,\n        updateRiskControlSettings,\n        updateSystemMonitoringSettings,\n        addMarketIntervention,\n        removeMarketIntervention,\n        updateMarketIntervention,\n        activateIntervention,\n        deactivateIntervention,\n        isInterventionActiveNow,\n        getActiveInterventions,\n        resolveInterventionConflicts,\n        validateInterventionSettings,\n        exportSettings,\n        importSettings,\n        createBackup,\n        restoreFromBackup\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EnhancedSystemSettingsContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\xiangmu\\\\Edge-Function\\\\ctoapp\\\\src\\\\context\\\\enhanced-system-settings-context.tsx\",\n        lineNumber: 604,\n        columnNumber: 9\n    }, this);\n}\n_s(EnhancedSystemSettingsProvider, \"mjrB44cE21+tpJ8TVr/zInKUPLU=\", false, function() {\n    return [\n        _enhanced_logs_context__WEBPACK_IMPORTED_MODULE_3__.useEnhancedLogs\n    ];\n});\n_c = EnhancedSystemSettingsProvider;\nfunction useEnhancedSystemSettings() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(EnhancedSystemSettingsContext);\n    if (context === undefined) {\n        throw new Error('useEnhancedSystemSettings must be used within an EnhancedSystemSettingsProvider');\n    }\n    return context;\n}\n_s1(useEnhancedSystemSettings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EnhancedSystemSettingsProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/enhanced-system-settings-context.tsx\n"));

/***/ })

});