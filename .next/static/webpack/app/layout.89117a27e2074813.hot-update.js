"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"ad63b4f37cc9\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJEOlxceGlhbmdtdVxcRWRnZS1GdW5jdGlvblxcY3RvYXBwXFxzcmNcXGFwcFxcZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJhZDYzYjRmMzdjYzlcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/context/balance-context.tsx":
/*!*****************************************!*\
  !*** ./src/context/balance-context.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BalanceProvider: () => (/* binding */ BalanceProvider),\n/* harmony export */   useBalance: () => (/* binding */ useBalance)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-context */ \"(app-pages-browser)/./src/context/auth-context.tsx\");\n/* harmony import */ var _enhanced_market_data_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enhanced-market-data-context */ \"(app-pages-browser)/./src/context/enhanced-market-data-context.tsx\");\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/hooks/use-toast */ \"(app-pages-browser)/./src/hooks/use-toast.ts\");\n/* harmony import */ var _logs_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./logs-context */ \"(app-pages-browser)/./src/context/logs-context.tsx\");\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(app-pages-browser)/./src/lib/supabaseClient.ts\");\n/* __next_internal_client_entry_do_not_use__ BalanceProvider,useBalance auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\nconst BalanceContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction BalanceProvider(param) {\n    let { children } = param;\n    _s();\n    const { user, updateUser } = (0,_auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const { getLatestPrice } = (0,_enhanced_market_data_context__WEBPACK_IMPORTED_MODULE_3__.useEnhancedMarket)();\n    const { toast } = (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_4__.useToast)();\n    const { addLog } = (0,_logs_context__WEBPACK_IMPORTED_MODULE_5__.useLogs)();\n    const [balances, setBalances] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [investments, setInvestments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [rewardLogs, setRewardLogs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeContractTrades, setActiveContractTrades] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [historicalTrades, setHistoricalTrades] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [lastCheckInDate, setLastCheckInDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [consecutiveCheckIns, setConsecutiveCheckIns] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const fetchUserBalanceData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[fetchUserBalanceData]\": async (userId)=>{\n            if (!_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.from(\"balances\").select(\"*\").eq(\"user_id\", userId);\n            if (error) console.error(\"Error fetching balances:\", error);\n            else {\n                const formattedBalances = {};\n                data === null || data === void 0 ? void 0 : data.forEach({\n                    \"BalanceProvider.useCallback[fetchUserBalanceData]\": (b)=>{\n                        formattedBalances[b.asset] = {\n                            available: b.available_balance,\n                            frozen: b.frozen_balance\n                        };\n                    }\n                }[\"BalanceProvider.useCallback[fetchUserBalanceData]\"]);\n                setBalances(formattedBalances);\n            }\n        }\n    }[\"BalanceProvider.useCallback[fetchUserBalanceData]\"], []);\n    const fetchUserTradeData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[fetchUserTradeData]\": async (userId)=>{\n            if (!_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.from(\"trades\").select(\"*\").eq(\"user_id\", userId).order(\"created_at\", {\n                ascending: false\n            });\n            if (error) console.error(\"Error fetching trades:\", error);\n            else {\n                setActiveContractTrades(data.filter({\n                    \"BalanceProvider.useCallback[fetchUserTradeData]\": (t)=>t.orderType === \"contract\" && t.status === \"active\"\n                }[\"BalanceProvider.useCallback[fetchUserTradeData]\"]));\n                setHistoricalTrades(data.filter({\n                    \"BalanceProvider.useCallback[fetchUserTradeData]\": (t)=>t.status !== \"active\"\n                }[\"BalanceProvider.useCallback[fetchUserTradeData]\"]));\n            }\n        }\n    }[\"BalanceProvider.useCallback[fetchUserTradeData]\"], []);\n    const fetchUserInvestmentData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[fetchUserInvestmentData]\": async (userId)=>{\n            if (!_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.from(\"investments\").select(\"*\").eq(\"user_id\", userId).order(\"created_at\", {\n                ascending: false\n            });\n            if (error) console.error(\"Error fetching investments:\", error);\n            else setInvestments(data);\n        }\n    }[\"BalanceProvider.useCallback[fetchUserInvestmentData]\"], []);\n    const fetchUserRewardLogs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[fetchUserRewardLogs]\": async (userId)=>{\n            if (!_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.from(\"reward_logs\").select(\"*\").eq(\"user_id\", userId).order(\"created_at\", {\n                ascending: false\n            });\n            if (error) console.error(\"Error fetching reward logs:\", error);\n            else setRewardLogs(data);\n        }\n    }[\"BalanceProvider.useCallback[fetchUserRewardLogs]\"], []);\n    const fetchUserProfileForCheckin = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[fetchUserProfileForCheckin]\": async (userId)=>{\n            if (!_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.from(\"profiles\").select(\"last_check_in_date, consecutive_check_ins\").eq(\"id\", userId).single();\n            if (error) {\n                console.error(\"Error fetching user profile for check-in:\", error);\n            } else if (data) {\n                setLastCheckInDate(data.last_check_in_date);\n                setConsecutiveCheckIns(data.consecutive_check_ins || 0);\n            }\n        }\n    }[\"BalanceProvider.useCallback[fetchUserProfileForCheckin]\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BalanceProvider.useEffect\": ()=>{\n            const loadAllData = {\n                \"BalanceProvider.useEffect.loadAllData\": async ()=>{\n                    setIsLoading(true);\n                    if ((user === null || user === void 0 ? void 0 : user.id) && _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) {\n                        await Promise.all([\n                            fetchUserBalanceData(user.id),\n                            fetchUserTradeData(user.id),\n                            fetchUserInvestmentData(user.id),\n                            fetchUserRewardLogs(user.id),\n                            fetchUserProfileForCheckin(user.id)\n                        ]);\n                    } else {\n                        // Clear data on logout\n                        setBalances({});\n                        setInvestments([]);\n                        setRewardLogs([]);\n                        setActiveContractTrades([]);\n                        setHistoricalTrades([]);\n                        setLastCheckInDate(undefined);\n                        setConsecutiveCheckIns(0);\n                    }\n                    setIsLoading(false);\n                }\n            }[\"BalanceProvider.useEffect.loadAllData\"];\n            loadAllData();\n        }\n    }[\"BalanceProvider.useEffect\"], [\n        user,\n        _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled,\n        fetchUserBalanceData,\n        fetchUserTradeData,\n        fetchUserInvestmentData,\n        fetchUserRewardLogs,\n        fetchUserProfileForCheckin\n    ]);\n    // Realtime Subscriptions\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BalanceProvider.useEffect\": ()=>{\n            if (!user || !_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const handleDataChange = {\n                \"BalanceProvider.useEffect.handleDataChange\": ()=>{\n                    if (!user) return;\n                    fetchUserTradeData(user.id);\n                    fetchUserInvestmentData(user.id);\n                    fetchUserBalanceData(user.id);\n                    fetchUserProfileForCheckin(user.id);\n                }\n            }[\"BalanceProvider.useEffect.handleDataChange\"];\n            const tradesChannel = _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.channel(\"trades-channel-\".concat(user.id)).on(\"postgres_changes\", {\n                event: \"*\",\n                schema: \"public\",\n                table: \"trades\",\n                filter: \"user_id=eq.\".concat(user.id)\n            }, handleDataChange).subscribe();\n            const investmentsChannel = _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.channel(\"investments-channel-\".concat(user.id)).on(\"postgres_changes\", {\n                event: \"*\",\n                schema: \"public\",\n                table: \"investments\",\n                filter: \"user_id=eq.\".concat(user.id)\n            }, handleDataChange).subscribe();\n            const balancesChannel = _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.channel(\"balances-channel-\".concat(user.id)).on(\"postgres_changes\", {\n                event: \"*\",\n                schema: \"public\",\n                table: \"balances\",\n                filter: \"user_id=eq.\".concat(user.id)\n            }, handleDataChange).subscribe();\n            const profileChannel = _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.channel(\"profile-channel-\".concat(user.id)).on(\"postgres_changes\", {\n                event: \"UPDATE\",\n                schema: \"public\",\n                table: \"profiles\",\n                filter: \"id=eq.\".concat(user.id)\n            }, handleDataChange).subscribe();\n            return ({\n                \"BalanceProvider.useEffect\": ()=>{\n                    _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.removeChannel(tradesChannel);\n                    _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.removeChannel(investmentsChannel);\n                    _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.removeChannel(balancesChannel);\n                    _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.removeChannel(profileChannel);\n                }\n            })[\"BalanceProvider.useEffect\"];\n        }\n    }[\"BalanceProvider.useEffect\"], [\n        user,\n        _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled,\n        fetchUserTradeData,\n        fetchUserInvestmentData,\n        fetchUserBalanceData,\n        fetchUserProfileForCheckin\n    ]);\n    const adjustBalance = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[adjustBalance]\": async function(userId, asset, amount) {\n            let isFrozen = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false, isDebitFrozen = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;\n            if (!_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const { error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.rpc(\"adjust_balance\", {\n                p_user_id: userId,\n                p_asset: asset,\n                p_amount: amount,\n                p_is_frozen: isFrozen,\n                p_is_debit_frozen: isDebitFrozen\n            });\n            if (error) {\n                console.error(\"Error adjusting balance:\", error);\n                if ((user === null || user === void 0 ? void 0 : user.id) === userId) {\n                    toast({\n                        variant: \"destructive\",\n                        title: \"Balance Update Failed\",\n                        description: error.message\n                    });\n                }\n            } else {\n                if ((user === null || user === void 0 ? void 0 : user.id) === userId) {\n                    fetchUserBalanceData(userId);\n                }\n            }\n        }\n    }[\"BalanceProvider.useCallback[adjustBalance]\"], [\n        toast,\n        user === null || user === void 0 ? void 0 : user.id,\n        fetchUserBalanceData\n    ]);\n    const creditReward = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[creditReward]\": async (params)=>{\n            if (!_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            const { error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.rpc(\"credit_reward\", {\n                p_user_id: params.userId,\n                p_amount: params.amount,\n                p_asset: params.asset,\n                p_reward_type: params.type,\n                p_source_id: params.sourceId,\n                p_description: params.description\n            });\n            if (error) {\n                console.error(\"Error crediting reward:\", error);\n            }\n        }\n    }[\"BalanceProvider.useCallback[creditReward]\"], []);\n    const placeContractTrade = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[placeContractTrade]\": async (trade, tradingPair)=>{\n            var _balances_quoteAsset;\n            if (!user || !_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            if (user.is_frozen) {\n                toast({\n                    variant: \"destructive\",\n                    title: \"Action Failed\",\n                    description: \"Your account is frozen.\"\n                });\n                return;\n            }\n            const quoteAsset = tradingPair.split(\"/\")[1];\n            const currentPrice = getLatestPrice(tradingPair);\n            if ((((_balances_quoteAsset = balances[quoteAsset]) === null || _balances_quoteAsset === void 0 ? void 0 : _balances_quoteAsset.available) || 0) < trade.amount) {\n                toast({\n                    variant: \"destructive\",\n                    title: \"下单失败\",\n                    description: \"可用 \".concat(quoteAsset, \" 余额不足。\")\n                });\n                return;\n            }\n            const newTrade = {\n                user_id: user.id,\n                trading_pair: tradingPair,\n                type: trade.type,\n                amount: trade.amount,\n                entry_price: currentPrice,\n                settlement_time: new Date(Date.now() + trade.period * 1000).toISOString(),\n                period: trade.period,\n                profit_rate: trade.profit_rate,\n                status: \"active\",\n                orderType: \"contract\"\n            };\n            const { data: insertedTrade, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.from(\"trades\").insert(newTrade).select().single();\n            if (error || !insertedTrade) {\n                console.error(\"Failed to place contract trade:\", error);\n                toast({\n                    variant: \"destructive\",\n                    title: \"下单失败\",\n                    description: \"无法保存交易记录，请重试。\"\n                });\n                return;\n            }\n            toast({\n                title: \"下单成功\",\n                description: \"您的合约订单已成功建立。\"\n            });\n        }\n    }[\"BalanceProvider.useCallback[placeContractTrade]\"], [\n        user,\n        balances,\n        getLatestPrice,\n        toast\n    ]);\n    const placeSpotTrade = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"BalanceProvider.useCallback[placeSpotTrade]\": async (trade)=>{\n            var _balances_quoteAsset, _balances_baseAsset;\n            if (!user || !_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return;\n            if (user.is_frozen) {\n                toast({\n                    variant: \"destructive\",\n                    title: \"Action Failed\",\n                    description: \"Your account is frozen.\"\n                });\n                return;\n            }\n            const [baseAsset, quoteAsset] = trade.trading_pair.split(\"/\");\n            if (trade.type === \"buy\" && (((_balances_quoteAsset = balances[quoteAsset]) === null || _balances_quoteAsset === void 0 ? void 0 : _balances_quoteAsset.available) || 0) < trade.total) {\n                toast({\n                    variant: \"destructive\",\n                    title: \"下单失败\",\n                    description: \"可用 \".concat(quoteAsset, \" 余额不足。\")\n                });\n                return;\n            }\n            if (trade.type === \"sell\" && (((_balances_baseAsset = balances[baseAsset]) === null || _balances_baseAsset === void 0 ? void 0 : _balances_baseAsset.available) || 0) < trade.amount) {\n                toast({\n                    variant: \"destructive\",\n                    title: \"下单失败\",\n                    description: \"可用 \".concat(baseAsset, \" 余额不足。\")\n                });\n                return;\n            }\n            const currentPrice = getLatestPrice(trade.trading_pair);\n            const newTrade = {\n                type: trade.type,\n                amount: trade.amount,\n                total: trade.total,\n                price: currentPrice,\n                user_id: user.id,\n                trading_pair: trade.trading_pair,\n                base_asset: baseAsset,\n                quote_asset: quoteAsset,\n                status: \"filled\",\n                orderType: \"spot\"\n            };\n            const { data: insertedTrade, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.from(\"trades\").insert(newTrade).select().single();\n            if (error || !insertedTrade) {\n                console.error(\"Failed to place spot trade:\", error);\n                toast({\n                    variant: \"destructive\",\n                    title: \"下单失败\",\n                    description: \"无法保存交易记录，请联系客服。\"\n                });\n                return;\n            }\n            toast({\n                title: \"交易成功\",\n                description: \"您的币币交易已完成。\"\n            });\n        }\n    }[\"BalanceProvider.useCallback[placeSpotTrade]\"], [\n        user,\n        balances,\n        getLatestPrice,\n        toast\n    ]);\n    const addDailyInvestment = async (params)=>{\n        if (!user || !_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return false;\n        const { error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.rpc(\"create_daily_investment\", {\n            p_user_id: user.id,\n            p_product_name: params.productName,\n            p_amount: params.amount,\n            p_daily_rate: params.dailyRate,\n            p_period: params.period,\n            p_category: \"staking\",\n            p_staking_asset: params.stakingAsset,\n            p_staking_amount: params.stakingAmount\n        });\n        if (error) {\n            console.error(\"Failed to add daily investment:\", error);\n            toast({\n                variant: \"destructive\",\n                title: \"购买失败\",\n                description: error.message\n            });\n            return false;\n        }\n        return true;\n    };\n    const addHourlyInvestment = async (params)=>{\n        if (!user || !_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) return false;\n        const selectedTier = params.tiers.find((t)=>t.hours === params.durationHours);\n        if (!selectedTier) return false;\n        const { error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.rpc(\"create_hourly_investment\", {\n            p_user_id: user.id,\n            p_product_name: params.productName,\n            p_amount: params.amount,\n            p_duration_hours: params.durationHours,\n            p_hourly_rate: selectedTier.rate\n        });\n        if (error) {\n            console.error(\"Failed to add hourly investment:\", error);\n            toast({\n                variant: \"destructive\",\n                title: \"购买失败\",\n                description: error.message\n            });\n            return false;\n        }\n        return true;\n    };\n    const handleCheckIn = async ()=>{\n        if (!user || !_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.isSupabaseEnabled) {\n            return {\n                success: false,\n                reward: 0,\n                message: \"User not logged in.\"\n            };\n        }\n        const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_6__.supabase.rpc(\"handle_user_check_in\", {\n            p_user_id: user.id\n        });\n        if (error) {\n            return {\n                success: false,\n                reward: 0,\n                message: error.message\n            };\n        }\n        return {\n            success: data.success,\n            reward: data.reward_amount,\n            message: data.message\n        };\n    };\n    const value = {\n        balances,\n        placeContractTrade,\n        placeSpotTrade,\n        isLoading,\n        investments,\n        rewardLogs,\n        addDailyInvestment,\n        addHourlyInvestment,\n        activeContractTrades,\n        historicalTrades,\n        handleCheckIn,\n        lastCheckInDate,\n        consecutiveCheckIns,\n        creditReward,\n        adjustBalance\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(BalanceContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\xiangmu\\\\Edge-Function\\\\ctoapp\\\\src\\\\context\\\\balance-context.tsx\",\n        lineNumber: 600,\n        columnNumber: 5\n    }, this);\n}\n_s(BalanceProvider, \"cnI1wDT8a9E3O/hjkUcublVDTts=\", false, function() {\n    return [\n        _auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth,\n        _enhanced_market_data_context__WEBPACK_IMPORTED_MODULE_3__.useEnhancedMarket,\n        _hooks_use_toast__WEBPACK_IMPORTED_MODULE_4__.useToast,\n        _logs_context__WEBPACK_IMPORTED_MODULE_5__.useLogs\n    ];\n});\n_c = BalanceProvider;\nfunction useBalance() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(BalanceContext);\n    if (context === undefined) {\n        throw new Error(\"useBalance must be used within an BalanceProvider\");\n    }\n    return context;\n}\n_s1(useBalance, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"BalanceProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb250ZXh0L2JhbGFuY2UtY29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBU2U7QUFVMEI7QUFDMEI7QUFDdEI7QUFDSjtBQUMwQjtBQTREbkUsTUFBTVksK0JBQWlCWCxvREFBYUEsQ0FBaUNZO0FBRTlELFNBQVNDLGdCQUFnQixLQUFxQztRQUFyQyxFQUFFQyxRQUFRLEVBQTJCLEdBQXJDOztJQUM5QixNQUFNLEVBQUVDLElBQUksRUFBRUMsVUFBVSxFQUFFLEdBQUdYLHNEQUFPQTtJQUNwQyxNQUFNLEVBQUVZLGNBQWMsRUFBRSxHQUFHWCxnRkFBaUJBO0lBQzVDLE1BQU0sRUFBRVksS0FBSyxFQUFFLEdBQUdYLDBEQUFRQTtJQUMxQixNQUFNLEVBQUVZLE1BQU0sRUFBRSxHQUFHWCxzREFBT0E7SUFFMUIsTUFBTSxDQUFDWSxVQUFVQyxZQUFZLEdBQUduQiwrQ0FBUUEsQ0FFckMsQ0FBQztJQUNKLE1BQU0sQ0FBQ29CLGFBQWFDLGVBQWUsR0FBR3JCLCtDQUFRQSxDQUFlLEVBQUU7SUFDL0QsTUFBTSxDQUFDc0IsWUFBWUMsY0FBYyxHQUFHdkIsK0NBQVFBLENBQWMsRUFBRTtJQUM1RCxNQUFNLENBQUN3QixzQkFBc0JDLHdCQUF3QixHQUFHekIsK0NBQVFBLENBRTlELEVBQUU7SUFDSixNQUFNLENBQUMwQixrQkFBa0JDLG9CQUFvQixHQUFHM0IsK0NBQVFBLENBRXRELEVBQUU7SUFDSixNQUFNLENBQUM0QixXQUFXQyxhQUFhLEdBQUc3QiwrQ0FBUUEsQ0FBQztJQUUzQyxNQUFNLENBQUM4QixpQkFBaUJDLG1CQUFtQixHQUFHL0IsK0NBQVFBO0lBQ3RELE1BQU0sQ0FBQ2dDLHFCQUFxQkMsdUJBQXVCLEdBQUdqQywrQ0FBUUEsQ0FBQztJQUUvRCxNQUFNa0MsdUJBQXVCaEMsa0RBQVdBOzZEQUFDLE9BQU9pQztZQUM5QyxJQUFJLENBQUMzQixrRUFBaUJBLEVBQUU7WUFDeEIsTUFB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OUIseURBQVFBLENBQUM0RSxHQUFHLENBQUMsd0JBQXdCO1lBQ2pFQyxXQUFXdkUsS0FBS21ELEVBQUU7UUFDcEI7UUFFQSxJQUFJM0IsT0FBTztZQUNULE9BQU87Z0JBQUU2RyxTQUFTO2dCQUFPQyxRQUFRO2dCQUFHdkQsU0FBU3ZELE1BQU11RCxPQUFPO1lBQUM7UUFDN0Q7UUFFQSxPQUFPO1lBQ0xzRCxTQUFTOUcsS0FBSzhHLE9BQU87WUFDckJDLFFBQVEvRyxLQUFLZ0gsYUFBYTtZQUMxQnhELFNBQVN4RCxLQUFLd0QsT0FBTztRQUN2QjtJQUNGO0lBRUEsTUFBTXlELFFBQTRCO1FBQ2hDbkk7UUFDQWtGO1FBQ0FtQjtRQUNBM0Y7UUFDQVI7UUFDQUU7UUFDQXVHO1FBQ0FXO1FBQ0FoSDtRQUNBRTtRQUNBdUg7UUFDQW5IO1FBQ0FFO1FBQ0E2RDtRQUNBZDtJQUNGO0lBRUEscUJBQ0UsOERBQUN0RSxlQUFlNkksUUFBUTtRQUFDRCxPQUFPQTtrQkFBUXpJOzs7Ozs7QUFFNUM7R0FwZ0JnQkQ7O1FBQ2VSLGtEQUFPQTtRQUNUQyw0RUFBaUJBO1FBQzFCQyxzREFBUUE7UUFDUEMsa0RBQU9BOzs7S0FKWks7QUFzZ0JULFNBQVM0STs7SUFDZCxNQUFNQyxVQUFVekosaURBQVVBLENBQUNVO0lBQzNCLElBQUkrSSxZQUFZOUksV0FBVztRQUN6QixNQUFNLElBQUkrSSxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVDtJQU5nQkQiLCJzb3VyY2VzIjpbIkQ6XFx4aWFuZ211XFxFZGdlLUZ1bmN0aW9uXFxjdG9hcHBcXHNyY1xcY29udGV4dFxcYmFsYW5jZS1jb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0LCB7XG4gIGNyZWF0ZUNvbnRleHQsXG4gIHVzZUNvbnRleHQsXG4gIHVzZVN0YXRlLFxuICB1c2VFZmZlY3QsXG4gIFJlYWN0Tm9kZSxcbiAgdXNlQ2FsbGJhY2ssXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtcbiAgQ29udHJhY3RUcmFkZSxcbiAgU3BvdFRyYWRlLFxuICBJbnZlc3RtZW50LFxuICBSZXdhcmRMb2csXG4gIFVzZXIsXG4gIEludmVzdG1lbnRUaWVyLFxuICBTZWN1cmVVc2VyLFxufSBmcm9tIFwiQC90eXBlc1wiO1xuaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gXCIuL2F1dGgtY29udGV4dFwiO1xuaW1wb3J0IHsgdXNlRW5oYW5jZWRNYXJrZXQgfSBmcm9tIFwiLi9lbmhhbmNlZC1tYXJrZXQtZGF0YS1jb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VUb2FzdCB9IGZyb20gXCJAL2hvb2tzL3VzZS10b2FzdFwiO1xuaW1wb3J0IHsgdXNlTG9ncyB9IGZyb20gXCIuL2xvZ3MtY29udGV4dFwiO1xuaW1wb3J0IHsgc3VwYWJhc2UsIGlzU3VwYWJhc2VFbmFibGVkIH0gZnJvbSBcIkAvbGliL3N1cGFiYXNlQ2xpZW50XCI7XG5cbmV4cG9ydCB0eXBlIERhaWx5SW52ZXN0bWVudFBhcmFtcyA9IHtcbiAgcHJvZHVjdE5hbWU6IHN0cmluZztcbiAgYW1vdW50OiBudW1iZXI7XG4gIGRhaWx5UmF0ZTogbnVtYmVyO1xuICBwZXJpb2Q6IG51bWJlcjtcbiAgY2F0ZWdvcnk6IFwic3Rha2luZ1wiIHwgXCJmaW5hbmNlXCI7XG4gIHN0YWtpbmdBc3NldD86IHN0cmluZztcbiAgc3Rha2luZ0Ftb3VudD86IG51bWJlcjtcbn07XG5cbmV4cG9ydCB0eXBlIEhvdXJseUludmVzdG1lbnRQYXJhbXMgPSB7XG4gIHByb2R1Y3ROYW1lOiBzdHJpbmc7XG4gIGFtb3VudDogbnVtYmVyO1xuICBkdXJhdGlvbkhvdXJzOiBudW1iZXI7XG4gIHRpZXJzOiBJbnZlc3RtZW50VGllcltdO1xuICBjYXRlZ29yeTogXCJzdGFraW5nXCIgfCBcImZpbmFuY2VcIjtcbn07XG5cbmludGVyZmFjZSBCYWxhbmNlQ29udGV4dFR5cGUge1xuICBiYWxhbmNlczogeyBba2V5OiBzdHJpbmddOiB7IGF2YWlsYWJsZTogbnVtYmVyOyBmcm96ZW46IG51bWJlciB9IH07XG4gIGludmVzdG1lbnRzOiBJbnZlc3RtZW50W107XG4gIHJld2FyZExvZ3M6IFJld2FyZExvZ1tdO1xuICBhZGREYWlseUludmVzdG1lbnQ6IChwYXJhbXM6IERhaWx5SW52ZXN0bWVudFBhcmFtcykgPT4gUHJvbWlzZTxib29sZWFuPjtcbiAgYWRkSG91cmx5SW52ZXN0bWVudDogKHBhcmFtczogSG91cmx5SW52ZXN0bWVudFBhcmFtcykgPT4gUHJvbWlzZTxib29sZWFuPjtcbiAgcGxhY2VDb250cmFjdFRyYWRlOiAoXG4gICAgdHJhZGU6IFBpY2s8Q29udHJhY3RUcmFkZSwgXCJ0eXBlXCIgfCBcImFtb3VudFwiIHwgXCJwZXJpb2RcIiB8IFwicHJvZml0X3JhdGVcIj4sXG4gICAgdHJhZGluZ1BhaXI6IHN0cmluZ1xuICApID0+IHZvaWQ7XG4gIHBsYWNlU3BvdFRyYWRlOiAoXG4gICAgdHJhZGU6IFBpY2s8U3BvdFRyYWRlLCBcInR5cGVcIiB8IFwiYW1vdW50XCIgfCBcInRvdGFsXCIgfCBcInRyYWRpbmdfcGFpclwiPlxuICApID0+IHZvaWQ7XG4gIGlzTG9hZGluZzogYm9vbGVhbjtcbiAgYWN0aXZlQ29udHJhY3RUcmFkZXM6IENvbnRyYWN0VHJhZGVbXTtcbiAgaGlzdG9yaWNhbFRyYWRlczogKFNwb3RUcmFkZSB8IENvbnRyYWN0VHJhZGUpW107XG4gIGhhbmRsZUNoZWNrSW46ICgpID0+IFByb21pc2U8e1xuICAgIHN1Y2Nlc3M6IGJvb2xlYW47XG4gICAgcmV3YXJkOiBudW1iZXI7XG4gICAgbWVzc2FnZT86IHN0cmluZztcbiAgfT47XG4gIGxhc3RDaGVja0luRGF0ZT86IHN0cmluZztcbiAgY29uc2VjdXRpdmVDaGVja0luczogbnVtYmVyO1xuICBjcmVkaXRSZXdhcmQ6IChwYXJhbXM6IHtcbiAgICB1c2VySWQ6IHN0cmluZztcbiAgICBhbW91bnQ6IG51bWJlcjtcbiAgICBhc3NldDogc3RyaW5nO1xuICAgIHR5cGU6IFJld2FyZExvZ1tcInR5cGVcIl07XG4gICAgc291cmNlSWQ6IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICB9KSA9PiBQcm9taXNlPHZvaWQ+O1xuICBhZGp1c3RCYWxhbmNlOiAoXG4gICAgdXNlcklkOiBzdHJpbmcsXG4gICAgYXNzZXQ6IHN0cmluZyxcbiAgICBhbW91bnQ6IG51bWJlcixcbiAgICBpc0Zyb3plbj86IGJvb2xlYW4sXG4gICAgaXNEZWJpdEZyb3plbj86IGJvb2xlYW5cbiAgKSA9PiBQcm9taXNlPHZvaWQ+O1xufVxuXG5jb25zdCBCYWxhbmNlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QmFsYW5jZUNvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5leHBvcnQgZnVuY3Rpb24gQmFsYW5jZVByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgeyB1c2VyLCB1cGRhdGVVc2VyIH0gPSB1c2VBdXRoKCk7XG4gIGNvbnN0IHsgZ2V0TGF0ZXN0UHJpY2UgfSA9IHVzZUVuaGFuY2VkTWFya2V0KCk7XG4gIGNvbnN0IHsgdG9hc3QgfSA9IHVzZVRvYXN0KCk7XG4gIGNvbnN0IHsgYWRkTG9nIH0gPSB1c2VMb2dzKCk7XG5cbiAgY29uc3QgW2JhbGFuY2VzLCBzZXRCYWxhbmNlc10gPSB1c2VTdGF0ZTx7XG4gICAgW2tleTogc3RyaW5nXTogeyBhdmFpbGFibGU6IG51bWJlcjsgZnJvemVuOiBudW1iZXIgfTtcbiAgfT4oe30pO1xuICBjb25zdCBbaW52ZXN0bWVudHMsIHNldEludmVzdG1lbnRzXSA9IHVzZVN0YXRlPEludmVzdG1lbnRbXT4oW10pO1xuICBjb25zdCBbcmV3YXJkTG9ncywgc2V0UmV3YXJkTG9nc10gPSB1c2VTdGF0ZTxSZXdhcmRMb2dbXT4oW10pO1xuICBjb25zdCBbYWN0aXZlQ29udHJhY3RUcmFkZXMsIHNldEFjdGl2ZUNvbnRyYWN0VHJhZGVzXSA9IHVzZVN0YXRlPFxuICAgIENvbnRyYWN0VHJhZGVbXVxuICA+KFtdKTtcbiAgY29uc3QgW2hpc3RvcmljYWxUcmFkZXMsIHNldEhpc3RvcmljYWxUcmFkZXNdID0gdXNlU3RhdGU8XG4gICAgKFNwb3RUcmFkZSB8IENvbnRyYWN0VHJhZGUpW11cbiAgPihbXSk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICBjb25zdCBbbGFzdENoZWNrSW5EYXRlLCBzZXRMYXN0Q2hlY2tJbkRhdGVdID0gdXNlU3RhdGU8c3RyaW5nIHwgdW5kZWZpbmVkPigpO1xuICBjb25zdCBbY29uc2VjdXRpdmVDaGVja0lucywgc2V0Q29uc2VjdXRpdmVDaGVja0luc10gPSB1c2VTdGF0ZSgwKTtcblxuICBjb25zdCBmZXRjaFVzZXJCYWxhbmNlRGF0YSA9IHVzZUNhbGxiYWNrKGFzeW5jICh1c2VySWQ6IHN0cmluZykgPT4ge1xuICAgIGlmICghaXNTdXBhYmFzZUVuYWJsZWQpIHJldHVybjtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oXCJiYWxhbmNlc1wiKVxuICAgICAgLnNlbGVjdChcIipcIilcbiAgICAgIC5lcShcInVzZXJfaWRcIiwgdXNlcklkKTtcbiAgICBpZiAoZXJyb3IpIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBiYWxhbmNlczpcIiwgZXJyb3IpO1xuICAgIGVsc2Uge1xuICAgICAgY29uc3QgZm9ybWF0dGVkQmFsYW5jZXM6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogeyBhdmFpbGFibGU6IG51bWJlcjsgZnJvemVuOiBudW1iZXIgfTtcbiAgICAgIH0gPSB7fTtcbiAgICAgIGRhdGE/LmZvckVhY2goKGIpID0+IHtcbiAgICAgICAgZm9ybWF0dGVkQmFsYW5jZXNbYi5hc3NldF0gPSB7XG4gICAgICAgICAgYXZhaWxhYmxlOiBiLmF2YWlsYWJsZV9iYWxhbmNlLFxuICAgICAgICAgIGZyb3plbjogYi5mcm96ZW5fYmFsYW5jZSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgICAgc2V0QmFsYW5jZXMoZm9ybWF0dGVkQmFsYW5jZXMpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IGZldGNoVXNlclRyYWRlRGF0YSA9IHVzZUNhbGxiYWNrKGFzeW5jICh1c2VySWQ6IHN0cmluZykgPT4ge1xuICAgIGlmICghaXNTdXBhYmFzZUVuYWJsZWQpIHJldHVybjtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oXCJ0cmFkZXNcIilcbiAgICAgIC5zZWxlY3QoXCIqXCIpXG4gICAgICAuZXEoXCJ1c2VyX2lkXCIsIHVzZXJJZClcbiAgICAgIC5vcmRlcihcImNyZWF0ZWRfYXRcIiwgeyBhc2NlbmRpbmc6IGZhbHNlIH0pO1xuICAgIGlmIChlcnJvcikgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIHRyYWRlczpcIiwgZXJyb3IpO1xuICAgIGVsc2Uge1xuICAgICAgc2V0QWN0aXZlQ29udHJhY3RUcmFkZXMoXG4gICAgICAgIGRhdGEuZmlsdGVyKFxuICAgICAgICAgICh0KSA9PiB0Lm9yZGVyVHlwZSA9PT0gXCJjb250cmFjdFwiICYmIHQuc3RhdHVzID09PSBcImFjdGl2ZVwiXG4gICAgICAgICkgYXMgQ29udHJhY3RUcmFkZVtdXG4gICAgICApO1xuICAgICAgc2V0SGlzdG9yaWNhbFRyYWRlcyhcbiAgICAgICAgZGF0YS5maWx0ZXIoKHQpID0+IHQuc3RhdHVzICE9PSBcImFjdGl2ZVwiKSBhcyAoXG4gICAgICAgICAgfCBTcG90VHJhZGVcbiAgICAgICAgICB8IENvbnRyYWN0VHJhZGVcbiAgICAgICAgKVtdXG4gICAgICApO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IGZldGNoVXNlckludmVzdG1lbnREYXRhID0gdXNlQ2FsbGJhY2soYXN5bmMgKHVzZXJJZDogc3RyaW5nKSA9PiB7XG4gICAgaWYgKCFpc1N1cGFiYXNlRW5hYmxlZCkgcmV0dXJuO1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbShcImludmVzdG1lbnRzXCIpXG4gICAgICAuc2VsZWN0KFwiKlwiKVxuICAgICAgLmVxKFwidXNlcl9pZFwiLCB1c2VySWQpXG4gICAgICAub3JkZXIoXCJjcmVhdGVkX2F0XCIsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KTtcbiAgICBpZiAoZXJyb3IpIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBpbnZlc3RtZW50czpcIiwgZXJyb3IpO1xuICAgIGVsc2Ugc2V0SW52ZXN0bWVudHMoZGF0YSBhcyBJbnZlc3RtZW50W10pO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgZmV0Y2hVc2VyUmV3YXJkTG9ncyA9IHVzZUNhbGxiYWNrKGFzeW5jICh1c2VySWQ6IHN0cmluZykgPT4ge1xuICAgIGlmICghaXNTdXBhYmFzZUVuYWJsZWQpIHJldHVybjtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oXCJyZXdhcmRfbG9nc1wiKVxuICAgICAgLnNlbGVjdChcIipcIilcbiAgICAgIC5lcShcInVzZXJfaWRcIiwgdXNlcklkKVxuICAgICAgLm9yZGVyKFwiY3JlYXRlZF9hdFwiLCB7IGFzY2VuZGluZzogZmFsc2UgfSk7XG4gICAgaWYgKGVycm9yKSBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgcmV3YXJkIGxvZ3M6XCIsIGVycm9yKTtcbiAgICBlbHNlIHNldFJld2FyZExvZ3MoZGF0YSBhcyBSZXdhcmRMb2dbXSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBmZXRjaFVzZXJQcm9maWxlRm9yQ2hlY2tpbiA9IHVzZUNhbGxiYWNrKGFzeW5jICh1c2VySWQ6IHN0cmluZykgPT4ge1xuICAgIGlmICghaXNTdXBhYmFzZUVuYWJsZWQpIHJldHVybjtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oXCJwcm9maWxlc1wiKVxuICAgICAgLnNlbGVjdChcImxhc3RfY2hlY2tfaW5fZGF0ZSwgY29uc2VjdXRpdmVfY2hlY2tfaW5zXCIpXG4gICAgICAuZXEoXCJpZFwiLCB1c2VySWQpXG4gICAgICAuc2luZ2xlKCk7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgdXNlciBwcm9maWxlIGZvciBjaGVjay1pbjpcIiwgZXJyb3IpO1xuICAgIH0gZWxzZSBpZiAoZGF0YSkge1xuICAgICAgc2V0TGFzdENoZWNrSW5EYXRlKGRhdGEubGFzdF9jaGVja19pbl9kYXRlKTtcbiAgICAgIHNldENvbnNlY3V0aXZlQ2hlY2tJbnMoZGF0YS5jb25zZWN1dGl2ZV9jaGVja19pbnMgfHwgMCk7XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBsb2FkQWxsRGF0YSA9IGFzeW5jICgpID0+IHtcbiAgICAgIHNldElzTG9hZGluZyh0cnVlKTtcbiAgICAgIGlmICh1c2VyPy5pZCAmJiBpc1N1cGFiYXNlRW5hYmxlZCkge1xuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgZmV0Y2hVc2VyQmFsYW5jZURhdGEodXNlci5pZCksXG4gICAgICAgICAgZmV0Y2hVc2VyVHJhZGVEYXRhKHVzZXIuaWQpLFxuICAgICAgICAgIGZldGNoVXNlckludmVzdG1lbnREYXRhKHVzZXIuaWQpLFxuICAgICAgICAgIGZldGNoVXNlclJld2FyZExvZ3ModXNlci5pZCksXG4gICAgICAgICAgZmV0Y2hVc2VyUHJvZmlsZUZvckNoZWNraW4odXNlci5pZCksXG4gICAgICAgIF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQ2xlYXIgZGF0YSBvbiBsb2dvdXRcbiAgICAgICAgc2V0QmFsYW5jZXMoe30pO1xuICAgICAgICBzZXRJbnZlc3RtZW50cyhbXSk7XG4gICAgICAgIHNldFJld2FyZExvZ3MoW10pO1xuICAgICAgICBzZXRBY3RpdmVDb250cmFjdFRyYWRlcyhbXSk7XG4gICAgICAgIHNldEhpc3RvcmljYWxUcmFkZXMoW10pO1xuICAgICAgICBzZXRMYXN0Q2hlY2tJbkRhdGUodW5kZWZpbmVkKTtcbiAgICAgICAgc2V0Q29uc2VjdXRpdmVDaGVja0lucygwKTtcbiAgICAgIH1cbiAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgfTtcbiAgICBsb2FkQWxsRGF0YSgpO1xuICB9LCBbXG4gICAgdXNlcixcbiAgICBpc1N1cGFiYXNlRW5hYmxlZCxcbiAgICBmZXRjaFVzZXJCYWxhbmNlRGF0YSxcbiAgICBmZXRjaFVzZXJUcmFkZURhdGEsXG4gICAgZmV0Y2hVc2VySW52ZXN0bWVudERhdGEsXG4gICAgZmV0Y2hVc2VyUmV3YXJkTG9ncyxcbiAgICBmZXRjaFVzZXJQcm9maWxlRm9yQ2hlY2tpbixcbiAgXSk7XG5cbiAgLy8gUmVhbHRpbWUgU3Vic2NyaXB0aW9uc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghdXNlciB8fCAhaXNTdXBhYmFzZUVuYWJsZWQpIHJldHVybjtcblxuICAgIGNvbnN0IGhhbmRsZURhdGFDaGFuZ2UgPSAoKSA9PiB7XG4gICAgICBpZiAoIXVzZXIpIHJldHVybjtcbiAgICAgIGZldGNoVXNlclRyYWRlRGF0YSh1c2VyLmlkKTtcbiAgICAgIGZldGNoVXNlckludmVzdG1lbnREYXRhKHVzZXIuaWQpO1xuICAgICAgZmV0Y2hVc2VyQmFsYW5jZURhdGEodXNlci5pZCk7XG4gICAgICBmZXRjaFVzZXJQcm9maWxlRm9yQ2hlY2tpbih1c2VyLmlkKTtcbiAgICB9O1xuXG4gICAgY29uc3QgdHJhZGVzQ2hhbm5lbCA9IHN1cGFiYXNlXG4gICAgICAuY2hhbm5lbChgdHJhZGVzLWNoYW5uZWwtJHt1c2VyLmlkfWApXG4gICAgICAub24oXG4gICAgICAgIFwicG9zdGdyZXNfY2hhbmdlc1wiLFxuICAgICAgICB7XG4gICAgICAgICAgZXZlbnQ6IFwiKlwiLFxuICAgICAgICAgIHNjaGVtYTogXCJwdWJsaWNcIixcbiAgICAgICAgICB0YWJsZTogXCJ0cmFkZXNcIixcbiAgICAgICAgICBmaWx0ZXI6IGB1c2VyX2lkPWVxLiR7dXNlci5pZH1gLFxuICAgICAgICB9LFxuICAgICAgICBoYW5kbGVEYXRhQ2hhbmdlXG4gICAgICApXG4gICAgICAuc3Vic2NyaWJlKCk7XG5cbiAgICBjb25zdCBpbnZlc3RtZW50c0NoYW5uZWwgPSBzdXBhYmFzZVxuICAgICAgLmNoYW5uZWwoYGludmVzdG1lbnRzLWNoYW5uZWwtJHt1c2VyLmlkfWApXG4gICAgICAub24oXG4gICAgICAgIFwicG9zdGdyZXNfY2hhbmdlc1wiLFxuICAgICAgICB7XG4gICAgICAgICAgZXZlbnQ6IFwiKlwiLFxuICAgICAgICAgIHNjaGVtYTogXCJwdWJsaWNcIixcbiAgICAgICAgICB0YWJsZTogXCJpbnZlc3RtZW50c1wiLFxuICAgICAgICAgIGZpbHRlcjogYHVzZXJfaWQ9ZXEuJHt1c2VyLmlkfWAsXG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZURhdGFDaGFuZ2VcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoKTtcblxuICAgIGNvbnN0IGJhbGFuY2VzQ2hhbm5lbCA9IHN1cGFiYXNlXG4gICAgICAuY2hhbm5lbChgYmFsYW5jZXMtY2hhbm5lbC0ke3VzZXIuaWR9YClcbiAgICAgIC5vbihcbiAgICAgICAgXCJwb3N0Z3Jlc19jaGFuZ2VzXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBldmVudDogXCIqXCIsXG4gICAgICAgICAgc2NoZW1hOiBcInB1YmxpY1wiLFxuICAgICAgICAgIHRhYmxlOiBcImJhbGFuY2VzXCIsXG4gICAgICAgICAgZmlsdGVyOiBgdXNlcl9pZD1lcS4ke3VzZXIuaWR9YCxcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlRGF0YUNoYW5nZVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSgpO1xuXG4gICAgY29uc3QgcHJvZmlsZUNoYW5uZWwgPSBzdXBhYmFzZVxuICAgICAgLmNoYW5uZWwoYHByb2ZpbGUtY2hhbm5lbC0ke3VzZXIuaWR9YClcbiAgICAgIC5vbihcbiAgICAgICAgXCJwb3N0Z3Jlc19jaGFuZ2VzXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBldmVudDogXCJVUERBVEVcIixcbiAgICAgICAgICBzY2hlbWE6IFwicHVibGljXCIsXG4gICAgICAgICAgdGFibGU6IFwicHJvZmlsZXNcIixcbiAgICAgICAgICBmaWx0ZXI6IGBpZD1lcS4ke3VzZXIuaWR9YCxcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlRGF0YUNoYW5nZVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSgpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHN1cGFiYXNlLnJlbW92ZUNoYW5uZWwodHJhZGVzQ2hhbm5lbCk7XG4gICAgICBzdXBhYmFzZS5yZW1vdmVDaGFubmVsKGludmVzdG1lbnRzQ2hhbm5lbCk7XG4gICAgICBzdXBhYmFzZS5yZW1vdmVDaGFubmVsKGJhbGFuY2VzQ2hhbm5lbCk7XG4gICAgICBzdXBhYmFzZS5yZW1vdmVDaGFubmVsKHByb2ZpbGVDaGFubmVsKTtcbiAgICB9O1xuICB9LCBbXG4gICAgdXNlcixcbiAgICBpc1N1cGFiYXNlRW5hYmxlZCxcbiAgICBmZXRjaFVzZXJUcmFkZURhdGEsXG4gICAgZmV0Y2hVc2VySW52ZXN0bWVudERhdGEsXG4gICAgZmV0Y2hVc2VyQmFsYW5jZURhdGEsXG4gICAgZmV0Y2hVc2VyUHJvZmlsZUZvckNoZWNraW4sXG4gIF0pO1xuXG4gIGNvbnN0IGFkanVzdEJhbGFuY2UgPSB1c2VDYWxsYmFjayhcbiAgICBhc3luYyAoXG4gICAgICB1c2VySWQ6IHN0cmluZyxcbiAgICAgIGFzc2V0OiBzdHJpbmcsXG4gICAgICBhbW91bnQ6IG51bWJlcixcbiAgICAgIGlzRnJvemVuOiBib29sZWFuID0gZmFsc2UsXG4gICAgICBpc0RlYml0RnJvemVuOiBib29sZWFuID0gZmFsc2VcbiAgICApID0+IHtcbiAgICAgIGlmICghaXNTdXBhYmFzZUVuYWJsZWQpIHJldHVybjtcbiAgICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLnJwYyhcImFkanVzdF9iYWxhbmNlXCIsIHtcbiAgICAgICAgcF91c2VyX2lkOiB1c2VySWQsXG4gICAgICAgIHBfYXNzZXQ6IGFzc2V0LFxuICAgICAgICBwX2Ftb3VudDogYW1vdW50LFxuICAgICAgICBwX2lzX2Zyb3plbjogaXNGcm96ZW4sXG4gICAgICAgIHBfaXNfZGViaXRfZnJvemVuOiBpc0RlYml0RnJvemVuLFxuICAgICAgfSk7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFkanVzdGluZyBiYWxhbmNlOlwiLCBlcnJvcik7XG4gICAgICAgIGlmICh1c2VyPy5pZCA9PT0gdXNlcklkKSB7XG4gICAgICAgICAgdG9hc3Qoe1xuICAgICAgICAgICAgdmFyaWFudDogXCJkZXN0cnVjdGl2ZVwiLFxuICAgICAgICAgICAgdGl0bGU6IFwiQmFsYW5jZSBVcGRhdGUgRmFpbGVkXCIsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHVzZXI/LmlkID09PSB1c2VySWQpIHtcbiAgICAgICAgICBmZXRjaFVzZXJCYWxhbmNlRGF0YSh1c2VySWQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBbdG9hc3QsIHVzZXI/LmlkLCBmZXRjaFVzZXJCYWxhbmNlRGF0YV1cbiAgKTtcblxuICBjb25zdCBjcmVkaXRSZXdhcmQgPSB1c2VDYWxsYmFjayhcbiAgICBhc3luYyAocGFyYW1zOiB7XG4gICAgICB1c2VySWQ6IHN0cmluZztcbiAgICAgIGFtb3VudDogbnVtYmVyO1xuICAgICAgYXNzZXQ6IHN0cmluZztcbiAgICAgIHR5cGU6IFJld2FyZExvZ1tcInR5cGVcIl07XG4gICAgICBzb3VyY2VJZDogc3RyaW5nO1xuICAgICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICB9KSA9PiB7XG4gICAgICBpZiAoIWlzU3VwYWJhc2VFbmFibGVkKSByZXR1cm47XG4gICAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoXCJjcmVkaXRfcmV3YXJkXCIsIHtcbiAgICAgICAgcF91c2VyX2lkOiBwYXJhbXMudXNlcklkLFxuICAgICAgICBwX2Ftb3VudDogcGFyYW1zLmFtb3VudCxcbiAgICAgICAgcF9hc3NldDogcGFyYW1zLmFzc2V0LFxuICAgICAgICBwX3Jld2FyZF90eXBlOiBwYXJhbXMudHlwZSxcbiAgICAgICAgcF9zb3VyY2VfaWQ6IHBhcmFtcy5zb3VyY2VJZCxcbiAgICAgICAgcF9kZXNjcmlwdGlvbjogcGFyYW1zLmRlc2NyaXB0aW9uLFxuICAgICAgfSk7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNyZWRpdGluZyByZXdhcmQ6XCIsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtdXG4gICk7XG5cbiAgY29uc3QgcGxhY2VDb250cmFjdFRyYWRlID0gdXNlQ2FsbGJhY2soXG4gICAgYXN5bmMgKFxuICAgICAgdHJhZGU6IFBpY2s8Q29udHJhY3RUcmFkZSwgXCJ0eXBlXCIgfCBcImFtb3VudFwiIHwgXCJwZXJpb2RcIiB8IFwicHJvZml0X3JhdGVcIj4sXG4gICAgICB0cmFkaW5nUGFpcjogc3RyaW5nXG4gICAgKSA9PiB7XG4gICAgICBpZiAoIXVzZXIgfHwgIWlzU3VwYWJhc2VFbmFibGVkKSByZXR1cm47XG5cbiAgICAgIGlmICh1c2VyLmlzX2Zyb3plbikge1xuICAgICAgICB0b2FzdCh7XG4gICAgICAgICAgdmFyaWFudDogXCJkZXN0cnVjdGl2ZVwiLFxuICAgICAgICAgIHRpdGxlOiBcIkFjdGlvbiBGYWlsZWRcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJZb3VyIGFjY291bnQgaXMgZnJvemVuLlwiLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBxdW90ZUFzc2V0ID0gdHJhZGluZ1BhaXIuc3BsaXQoXCIvXCIpWzFdO1xuICAgICAgY29uc3QgY3VycmVudFByaWNlID0gZ2V0TGF0ZXN0UHJpY2UodHJhZGluZ1BhaXIpO1xuXG4gICAgICBpZiAoKGJhbGFuY2VzW3F1b3RlQXNzZXRdPy5hdmFpbGFibGUgfHwgMCkgPCB0cmFkZS5hbW91bnQpIHtcbiAgICAgICAgdG9hc3Qoe1xuICAgICAgICAgIHZhcmlhbnQ6IFwiZGVzdHJ1Y3RpdmVcIixcbiAgICAgICAgICB0aXRsZTogXCLkuIvljZXlpLHotKVcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogYOWPr+eUqCAke3F1b3RlQXNzZXR9IOS9memineS4jei2s+OAgmAsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG5ld1RyYWRlOiBPbWl0PENvbnRyYWN0VHJhZGUsIFwiaWRcIiB8IFwiY3JlYXRlZF9hdFwiPiA9IHtcbiAgICAgICAgdXNlcl9pZDogdXNlci5pZCxcbiAgICAgICAgdHJhZGluZ19wYWlyOiB0cmFkaW5nUGFpcixcbiAgICAgICAgdHlwZTogdHJhZGUudHlwZSxcbiAgICAgICAgYW1vdW50OiB0cmFkZS5hbW91bnQsXG4gICAgICAgIGVudHJ5X3ByaWNlOiBjdXJyZW50UHJpY2UsXG4gICAgICAgIHNldHRsZW1lbnRfdGltZTogbmV3IERhdGUoXG4gICAgICAgICAgRGF0ZS5ub3coKSArIHRyYWRlLnBlcmlvZCAqIDEwMDBcbiAgICAgICAgKS50b0lTT1N0cmluZygpLFxuICAgICAgICBwZXJpb2Q6IHRyYWRlLnBlcmlvZCxcbiAgICAgICAgcHJvZml0X3JhdGU6IHRyYWRlLnByb2ZpdF9yYXRlLFxuICAgICAgICBzdGF0dXM6IFwiYWN0aXZlXCIsXG4gICAgICAgIG9yZGVyVHlwZTogXCJjb250cmFjdFwiLFxuICAgICAgfTtcblxuICAgICAgY29uc3QgeyBkYXRhOiBpbnNlcnRlZFRyYWRlLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oXCJ0cmFkZXNcIilcbiAgICAgICAgLmluc2VydChuZXdUcmFkZSlcbiAgICAgICAgLnNlbGVjdCgpXG4gICAgICAgIC5zaW5nbGUoKTtcblxuICAgICAgaWYgKGVycm9yIHx8ICFpbnNlcnRlZFRyYWRlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gcGxhY2UgY29udHJhY3QgdHJhZGU6XCIsIGVycm9yKTtcbiAgICAgICAgdG9hc3Qoe1xuICAgICAgICAgIHZhcmlhbnQ6IFwiZGVzdHJ1Y3RpdmVcIixcbiAgICAgICAgICB0aXRsZTogXCLkuIvljZXlpLHotKVcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCLml6Dms5Xkv53lrZjkuqTmmJPorrDlvZXvvIzor7fph43or5XjgIJcIixcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdG9hc3QoeyB0aXRsZTogXCLkuIvljZXmiJDlip9cIiwgZGVzY3JpcHRpb246IFwi5oKo55qE5ZCI57qm6K6i5Y2V5bey5oiQ5Yqf5bu656uL44CCXCIgfSk7XG4gICAgfSxcbiAgICBbdXNlciwgYmFsYW5jZXMsIGdldExhdGVzdFByaWNlLCB0b2FzdF1cbiAgKTtcblxuICBjb25zdCBwbGFjZVNwb3RUcmFkZSA9IHVzZUNhbGxiYWNrKFxuICAgIGFzeW5jIChcbiAgICAgIHRyYWRlOiBQaWNrPFNwb3RUcmFkZSwgXCJ0eXBlXCIgfCBcImFtb3VudFwiIHwgXCJ0b3RhbFwiIHwgXCJ0cmFkaW5nX3BhaXJcIj5cbiAgICApID0+IHtcbiAgICAgIGlmICghdXNlciB8fCAhaXNTdXBhYmFzZUVuYWJsZWQpIHJldHVybjtcblxuICAgICAgaWYgKHVzZXIuaXNfZnJvemVuKSB7XG4gICAgICAgIHRvYXN0KHtcbiAgICAgICAgICB2YXJpYW50OiBcImRlc3RydWN0aXZlXCIsXG4gICAgICAgICAgdGl0bGU6IFwiQWN0aW9uIEZhaWxlZFwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIllvdXIgYWNjb3VudCBpcyBmcm96ZW4uXCIsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IFtiYXNlQXNzZXQsIHF1b3RlQXNzZXRdID0gdHJhZGUudHJhZGluZ19wYWlyLnNwbGl0KFwiL1wiKTtcblxuICAgICAgaWYgKFxuICAgICAgICB0cmFkZS50eXBlID09PSBcImJ1eVwiICYmXG4gICAgICAgIChiYWxhbmNlc1txdW90ZUFzc2V0XT8uYXZhaWxhYmxlIHx8IDApIDwgdHJhZGUudG90YWxcbiAgICAgICkge1xuICAgICAgICB0b2FzdCh7XG4gICAgICAgICAgdmFyaWFudDogXCJkZXN0cnVjdGl2ZVwiLFxuICAgICAgICAgIHRpdGxlOiBcIuS4i+WNleWksei0pVwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBg5Y+v55SoICR7cXVvdGVBc3NldH0g5L2Z6aKd5LiN6Laz44CCYCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChcbiAgICAgICAgdHJhZGUudHlwZSA9PT0gXCJzZWxsXCIgJiZcbiAgICAgICAgKGJhbGFuY2VzW2Jhc2VBc3NldF0/LmF2YWlsYWJsZSB8fCAwKSA8IHRyYWRlLmFtb3VudFxuICAgICAgKSB7XG4gICAgICAgIHRvYXN0KHtcbiAgICAgICAgICB2YXJpYW50OiBcImRlc3RydWN0aXZlXCIsXG4gICAgICAgICAgdGl0bGU6IFwi5LiL5Y2V5aSx6LSlXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IGDlj6/nlKggJHtiYXNlQXNzZXR9IOS9memineS4jei2s+OAgmAsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGN1cnJlbnRQcmljZSA9IGdldExhdGVzdFByaWNlKHRyYWRlLnRyYWRpbmdfcGFpcik7XG4gICAgICBjb25zdCBuZXdUcmFkZTogT21pdDxTcG90VHJhZGUsIFwiaWRcIiB8IFwiY3JlYXRlZF9hdFwiPiA9IHtcbiAgICAgICAgdHlwZTogdHJhZGUudHlwZSxcbiAgICAgICAgYW1vdW50OiB0cmFkZS5hbW91bnQsXG4gICAgICAgIHRvdGFsOiB0cmFkZS50b3RhbCxcbiAgICAgICAgcHJpY2U6IGN1cnJlbnRQcmljZSxcbiAgICAgICAgdXNlcl9pZDogdXNlci5pZCxcbiAgICAgICAgdHJhZGluZ19wYWlyOiB0cmFkZS50cmFkaW5nX3BhaXIsXG4gICAgICAgIGJhc2VfYXNzZXQ6IGJhc2VBc3NldCxcbiAgICAgICAgcXVvdGVfYXNzZXQ6IHF1b3RlQXNzZXQsXG4gICAgICAgIHN0YXR1czogXCJmaWxsZWRcIixcbiAgICAgICAgb3JkZXJUeXBlOiBcInNwb3RcIixcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IHsgZGF0YTogaW5zZXJ0ZWRUcmFkZSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKFwidHJhZGVzXCIpXG4gICAgICAgIC5pbnNlcnQobmV3VHJhZGUpXG4gICAgICAgIC5zZWxlY3QoKVxuICAgICAgICAuc2luZ2xlKCk7XG4gICAgICBpZiAoZXJyb3IgfHwgIWluc2VydGVkVHJhZGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBwbGFjZSBzcG90IHRyYWRlOlwiLCBlcnJvcik7XG4gICAgICAgIHRvYXN0KHtcbiAgICAgICAgICB2YXJpYW50OiBcImRlc3RydWN0aXZlXCIsXG4gICAgICAgICAgdGl0bGU6IFwi5LiL5Y2V5aSx6LSlXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwi5peg5rOV5L+d5a2Y5Lqk5piT6K6w5b2V77yM6K+36IGU57O75a6i5pyN44CCXCIsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRvYXN0KHsgdGl0bGU6IFwi5Lqk5piT5oiQ5YqfXCIsIGRlc2NyaXB0aW9uOiBcIuaCqOeahOW4geW4geS6pOaYk+W3suWujOaIkOOAglwiIH0pO1xuICAgIH0sXG4gICAgW3VzZXIsIGJhbGFuY2VzLCBnZXRMYXRlc3RQcmljZSwgdG9hc3RdXG4gICk7XG5cbiAgY29uc3QgYWRkRGFpbHlJbnZlc3RtZW50ID0gYXN5bmMgKHBhcmFtczogRGFpbHlJbnZlc3RtZW50UGFyYW1zKSA9PiB7XG4gICAgaWYgKCF1c2VyIHx8ICFpc1N1cGFiYXNlRW5hYmxlZCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UucnBjKFwiY3JlYXRlX2RhaWx5X2ludmVzdG1lbnRcIiwge1xuICAgICAgcF91c2VyX2lkOiB1c2VyLmlkLFxuICAgICAgcF9wcm9kdWN0X25hbWU6IHBhcmFtcy5wcm9kdWN0TmFtZSxcbiAgICAgIHBfYW1vdW50OiBwYXJhbXMuYW1vdW50LFxuICAgICAgcF9kYWlseV9yYXRlOiBwYXJhbXMuZGFpbHlSYXRlLFxuICAgICAgcF9wZXJpb2Q6IHBhcmFtcy5wZXJpb2QsXG4gICAgICBwX2NhdGVnb3J5OiBcInN0YWtpbmdcIixcbiAgICAgIHBfc3Rha2luZ19hc3NldDogcGFyYW1zLnN0YWtpbmdBc3NldCxcbiAgICAgIHBfc3Rha2luZ19hbW91bnQ6IHBhcmFtcy5zdGFraW5nQW1vdW50LFxuICAgIH0pO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGFkZCBkYWlseSBpbnZlc3RtZW50OlwiLCBlcnJvcik7XG4gICAgICB0b2FzdCh7XG4gICAgICAgIHZhcmlhbnQ6IFwiZGVzdHJ1Y3RpdmVcIixcbiAgICAgICAgdGl0bGU6IFwi6LSt5Lmw5aSx6LSlXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBlcnJvci5tZXNzYWdlLFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIGNvbnN0IGFkZEhvdXJseUludmVzdG1lbnQgPSBhc3luYyAocGFyYW1zOiBIb3VybHlJbnZlc3RtZW50UGFyYW1zKSA9PiB7XG4gICAgaWYgKCF1c2VyIHx8ICFpc1N1cGFiYXNlRW5hYmxlZCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgY29uc3Qgc2VsZWN0ZWRUaWVyID0gcGFyYW1zLnRpZXJzLmZpbmQoXG4gICAgICAodCkgPT4gdC5ob3VycyA9PT0gcGFyYW1zLmR1cmF0aW9uSG91cnNcbiAgICApO1xuICAgIGlmICghc2VsZWN0ZWRUaWVyKSByZXR1cm4gZmFsc2U7XG5cbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoXCJjcmVhdGVfaG91cmx5X2ludmVzdG1lbnRcIiwge1xuICAgICAgcF91c2VyX2lkOiB1c2VyLmlkLFxuICAgICAgcF9wcm9kdWN0X25hbWU6IHBhcmFtcy5wcm9kdWN0TmFtZSxcbiAgICAgIHBfYW1vdW50OiBwYXJhbXMuYW1vdW50LFxuICAgICAgcF9kdXJhdGlvbl9ob3VyczogcGFyYW1zLmR1cmF0aW9uSG91cnMsXG4gICAgICBwX2hvdXJseV9yYXRlOiBzZWxlY3RlZFRpZXIucmF0ZSxcbiAgICB9KTtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBhZGQgaG91cmx5IGludmVzdG1lbnQ6XCIsIGVycm9yKTtcbiAgICAgIHRvYXN0KHtcbiAgICAgICAgdmFyaWFudDogXCJkZXN0cnVjdGl2ZVwiLFxuICAgICAgICB0aXRsZTogXCLotK3kubDlpLHotKVcIixcbiAgICAgICAgZGVzY3JpcHRpb246IGVycm9yLm1lc3NhZ2UsXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hlY2tJbiA9IGFzeW5jICgpOiBQcm9taXNlPHtcbiAgICBzdWNjZXNzOiBib29sZWFuO1xuICAgIHJld2FyZDogbnVtYmVyO1xuICAgIG1lc3NhZ2U/OiBzdHJpbmc7XG4gIH0+ID0+IHtcbiAgICBpZiAoIXVzZXIgfHwgIWlzU3VwYWJhc2VFbmFibGVkKSB7XG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgcmV3YXJkOiAwLCBtZXNzYWdlOiBcIlVzZXIgbm90IGxvZ2dlZCBpbi5cIiB9O1xuICAgIH1cblxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLnJwYyhcImhhbmRsZV91c2VyX2NoZWNrX2luXCIsIHtcbiAgICAgIHBfdXNlcl9pZDogdXNlci5pZCxcbiAgICB9KTtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIHJld2FyZDogMCwgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB9O1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBkYXRhLnN1Y2Nlc3MsXG4gICAgICByZXdhcmQ6IGRhdGEucmV3YXJkX2Ftb3VudCxcbiAgICAgIG1lc3NhZ2U6IGRhdGEubWVzc2FnZSxcbiAgICB9O1xuICB9O1xuXG4gIGNvbnN0IHZhbHVlOiBCYWxhbmNlQ29udGV4dFR5cGUgPSB7XG4gICAgYmFsYW5jZXMsXG4gICAgcGxhY2VDb250cmFjdFRyYWRlLFxuICAgIHBsYWNlU3BvdFRyYWRlLFxuICAgIGlzTG9hZGluZyxcbiAgICBpbnZlc3RtZW50cyxcbiAgICByZXdhcmRMb2dzLFxuICAgIGFkZERhaWx5SW52ZXN0bWVudCxcbiAgICBhZGRIb3VybHlJbnZlc3RtZW50LFxuICAgIGFjdGl2ZUNvbnRyYWN0VHJhZGVzLFxuICAgIGhpc3RvcmljYWxUcmFkZXMsXG4gICAgaGFuZGxlQ2hlY2tJbixcbiAgICBsYXN0Q2hlY2tJbkRhdGUsXG4gICAgY29uc2VjdXRpdmVDaGVja0lucyxcbiAgICBjcmVkaXRSZXdhcmQsXG4gICAgYWRqdXN0QmFsYW5jZSxcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxCYWxhbmNlQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17dmFsdWV9PntjaGlsZHJlbn08L0JhbGFuY2VDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQmFsYW5jZSgpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQmFsYW5jZUNvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwidXNlQmFsYW5jZSBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEJhbGFuY2VQcm92aWRlclwiKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDYWxsYmFjayIsInVzZUF1dGgiLCJ1c2VFbmhhbmNlZE1hcmtldCIsInVzZVRvYXN0IiwidXNlTG9ncyIsInN1cGFiYXNlIiwiaXNTdXBhYmFzZUVuYWJsZWQiLCJCYWxhbmNlQ29udGV4dCIsInVuZGVmaW5lZCIsIkJhbGFuY2VQcm92aWRlciIsImNoaWxkcmVuIiwidXNlciIsInVwZGF0ZVVzZXIiLCJnZXRMYXRlc3RQcmljZSIsInRvYXN0IiwiYWRkTG9nIiwiYmFsYW5jZXMiLCJzZXRCYWxhbmNlcyIsImludmVzdG1lbnRzIiwic2V0SW52ZXN0bWVudHMiLCJyZXdhcmRMb2dzIiwic2V0UmV3YXJkTG9ncyIsImFjdGl2ZUNvbnRyYWN0VHJhZGVzIiwic2V0QWN0aXZlQ29udHJhY3RUcmFkZXMiLCJoaXN0b3JpY2FsVHJhZGVzIiwic2V0SGlzdG9yaWNhbFRyYWRlcyIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsImxhc3RDaGVja0luRGF0ZSIsInNldExhc3RDaGVja0luRGF0ZSIsImNvbnNlY3V0aXZlQ2hlY2tJbnMiLCJzZXRDb25zZWN1dGl2ZUNoZWNrSW5zIiwiZmV0Y2hVc2VyQmFsYW5jZURhdGEiLCJ1c2VySWQiLCJkYXRhIiwiZXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJjb25zb2xlIiwiZm9ybWF0dGVkQmFsYW5jZXMiLCJmb3JFYWNoIiwiYiIsImFzc2V0IiwiYXZhaWxhYmxlIiwiYXZhaWxhYmxlX2JhbGFuY2UiLCJmcm96ZW4iLCJmcm96ZW5fYmFsYW5jZSIsImZldGNoVXNlclRyYWRlRGF0YSIsIm9yZGVyIiwiYXNjZW5kaW5nIiwiZmlsdGVyIiwidCIsIm9yZGVyVHlwZSIsInN0YXR1cyIsImZldGNoVXNlckludmVzdG1lbnREYXRhIiwiZmV0Y2hVc2VyUmV3YXJkTG9ncyIsImZldGNoVXNlclByb2ZpbGVGb3JDaGVja2luIiwic2luZ2xlIiwibGFzdF9jaGVja19pbl9kYXRlIiwiY29uc2VjdXRpdmVfY2hlY2tfaW5zIiwibG9hZEFsbERhdGEiLCJpZCIsIlByb21pc2UiLCJhbGwiLCJoYW5kbGVEYXRhQ2hhbmdlIiwidHJhZGVzQ2hhbm5lbCIsImNoYW5uZWwiLCJvbiIsImV2ZW50Iiwic2NoZW1hIiwidGFibGUiLCJzdWJzY3JpYmUiLCJpbnZlc3RtZW50c0NoYW5uZWwiLCJiYWxhbmNlc0NoYW5uZWwiLCJwcm9maWxlQ2hhbm5lbCIsInJlbW92ZUNoYW5uZWwiLCJhZGp1c3RCYWxhbmNlIiwiYW1vdW50IiwiaXNGcm96ZW4iLCJpc0RlYml0RnJvemVuIiwicnBjIiwicF91c2VyX2lkIiwicF9hc3NldCIsInBfYW1vdW50IiwicF9pc19mcm96ZW4iLCJwX2lzX2RlYml0X2Zyb3plbiIsInZhcmlhbnQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwibWVzc2FnZSIsImNyZWRpdFJld2FyZCIsInBhcmFtcyIsInBfcmV3YXJkX3R5cGUiLCJ0eXBlIiwicF9zb3VyY2VfaWQiLCJzb3VyY2VJZCIsInBfZGVzY3JpcHRpb24iLCJwbGFjZUNvbnRyYWN0VHJhZGUiLCJ0cmFkZSIsInRyYWRpbmdQYWlyIiwiaXNfZnJvemVuIiwicXVvdGVBc3NldCIsInNwbGl0IiwiY3VycmVudFByaWNlIiwibmV3VHJhZGUiLCJ1c2VyX2lkIiwidHJhZGluZ19wYWlyIiwiZW50cnlfcHJpY2UiLCJzZXR0bGVtZW50X3RpbWUiLCJEYXRlIiwibm93IiwicGVyaW9kIiwidG9JU09TdHJpbmciLCJwcm9maXRfcmF0ZSIsImluc2VydGVkVHJhZGUiLCJpbnNlcnQiLCJwbGFjZVNwb3RUcmFkZSIsImJhc2VBc3NldCIsInRvdGFsIiwicHJpY2UiLCJiYXNlX2Fzc2V0IiwicXVvdGVfYXNzZXQiLCJhZGREYWlseUludmVzdG1lbnQiLCJwX3Byb2R1Y3RfbmFtZSIsInByb2R1Y3ROYW1lIiwicF9kYWlseV9yYXRlIiwiZGFpbHlSYXRlIiwicF9wZXJpb2QiLCJwX2NhdGVnb3J5IiwicF9zdGFraW5nX2Fzc2V0Iiwic3Rha2luZ0Fzc2V0IiwicF9zdGFraW5nX2Ftb3VudCIsInN0YWtpbmdBbW91bnQiLCJhZGRIb3VybHlJbnZlc3RtZW50Iiwic2VsZWN0ZWRUaWVyIiwidGllcnMiLCJmaW5kIiwiaG91cnMiLCJkdXJhdGlvbkhvdXJzIiwicF9kdXJhdGlvbl9ob3VycyIsInBfaG91cmx5X3JhdGUiLCJyYXRlIiwiaGFuZGxlQ2hlY2tJbiIsInN1Y2Nlc3MiLCJyZXdhcmQiLCJyZXdhcmRfYW1vdW50IiwidmFsdWUiLCJQcm92aWRlciIsInVzZUJhbGFuY2UiLCJjb250ZXh0IiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/balance-context.tsx\n"));

/***/ })

});